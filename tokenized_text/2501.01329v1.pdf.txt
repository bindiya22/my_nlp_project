{"words": ["journaloflatexclassfilesvolnoseptember", "prompt", "alchemist", "automated", "llmtailored", "prompt", "optimization", "test", "case", "generation", "shuzheng", "gao", "chaozheng", "wang", "cuiyun", "gao", "xiaoqian", "jiao", "chun", "yong", "chong", "gao", "michael", "r", "lyu", "chinese", "university", "hong", "kong", "hong", "kong", "china", "harbin", "institute", "technology", "shenzhen", "china", "school", "information", "technology", "monash", "university", "malaysia", "malaysia", "independent", "researcher", "china", "szgaocsecuhkeduhk", "adfgmailcom", "gaocuiyunhiteducn", "stuhiteducn", "chongchunyongmonashedu", "gaoshan", "csoutlookcom", "lyucsecuhkeduhk", "abstracttest", "case", "essential", "validating", "reliabil", "generation", "large", "language", "model", "ity", "quality", "software", "application", "recent", "study", "demonstrated", "capability", "large", "language", "model", "llm", "generate", "useful", "test", "case", "given", "source", "code", "however", "introduction", "existing", "work", "primarily", "relies", "humanwritten", "plain", "prompt", "test", "case", "play", "crucial", "role", "validating", "reliability", "often", "lead", "suboptimal", "result", "since", "performance", "llm", "highly", "influenced", "prompt", "moreover", "quality", "software", "application", "allowing", "theseapproachesusethesamepromptforallllmsoverlooking", "developerstoidentifyandrectifybugsanddefectsattheearly", "fact", "different", "llm", "might", "best", "suited", "different", "developmentstageitremarkablyenhancestheoverallstability", "promptsgiventhewidevarietyofpossiblepromptformulations", "software", "however", "manually", "writing", "test", "case", "automatically", "discovering", "optimal", "prompt", "llm", "challenging", "timeconsuming", "task", "consequently", "task", "present", "significant", "challenge", "although", "method", "automated", "prompt", "optimization", "natural", "language", "test", "case", "generation", "aim", "creating", "highquality", "processing", "field", "hard", "produce", "effective", "prompt", "test", "case", "automatically", "attracted", "developer", "test", "case", "generation", "task", "first", "method", "iteratively", "researcher", "attention", "recent", "year", "optimize", "prompt", "simply", "combining", "mutating", "existing", "traditional", "test", "case", "generation", "method", "evo", "one", "without", "proper", "guidance", "resulting", "prompt", "lack", "diversity", "tend", "repeat", "error", "generated", "suite", "randoop", "mainly", "employ", "searchbased", "test", "case", "second", "prompt", "generally", "lack", "domain", "constraintbased", "technique", "craft", "test", "suite", "recent", "ad", "contextual", "knowledge", "limiting", "llm", "performance", "task", "vancements", "deep", "learning", "introduced", "many", "learning", "paper", "introduce", "map", "llmtailored", "prompt", "basedtestgenerationapproachesforinstanceathenatest", "generation", "method", "test", "case", "generation", "map", "com", "finetunes", "bart", "dataset", "designed", "fortest", "generation", "prisesthreemainmodulesdiversityguidedpromptgeneration", "atest", "incorporates", "assertion", "knowledge", "failuredriven", "rule", "induction", "domain", "contextual", "knowl", "edge", "extraction", "specifically", "diversityguided", "prompt", "test", "signature", "verification", "mechanism", "achieving", "better", "generation", "module", "map", "creates", "varied", "prompt", "exploring", "result", "model", "aim", "leveraging", "general", "program", "diverse", "modification", "path", "optimization", "process", "ming", "knowledge", "acquired", "extensive", "developerwritten", "prevents", "optimization", "process", "converging", "local", "codecorporatogeneratemorecomprehensiveandmeaningful", "optimum", "failuredriven", "rule", "induction", "module", "aim", "iden", "test", "recently", "large", "language", "model", "llm", "tifying", "promising", "optimization", "direction", "reflecting", "common", "failure", "generated", "test", "case", "reflection", "output", "chatgpt", "gained", "widespread", "adoption", "various", "aresoftlyintegratedintopromptsbasedonaruletransformation", "software", "engineering", "se", "task", "including", "test", "case", "genus", "method", "domain", "contextual", "knowledge", "extraction", "module", "tion", "show", "promising", "result", "due", "powerful", "zero", "aimsatenrichingthepromptswithrelateddomainknowledgeby", "shot", "capability", "llm", "directly", "deployed", "incorporating", "infile", "crossfile", "context", "information", "stream", "task", "prompt", "engineering", "without", "requiring", "evaluatetheeffectivenessofmapswecompareitwithfourstate", "oftheart", "prompt", "optimization", "method", "across", "three", "popular", "finetuning", "example", "chatunitest", "harness", "llm", "experimental", "result", "demonstrate", "method", "capability", "llm", "employ", "generationvalidation", "outperforms", "baseline", "method", "large", "margin", "achieving", "repair", "mechanism", "rectify", "error", "generated", "test", "case", "higher", "line", "coverage", "rate", "higher", "branch", "yuan", "et", "al", "evaluate", "chatgpts", "performance", "test", "case", "coverage", "rate", "average", "moreover", "experiment", "different", "generation", "enhance", "iterative", "test", "refinement", "llmsshowthatourmethodcaneffectivelyfindthemostsuitable", "prompt", "llm", "process", "however", "existing", "llmbased", "work", "primarily", "relies", "index", "termssoftware", "testing", "debugging", "test", "case", "humanwrittenplainpromptswhichoftenleadstosuboptimal", "result", "since", "performance", "llm", "highly", "influ", "corresponding", "author", "author", "also", "affiliated", "peng", "cheng", "laboratory", "encedbythepromptsadditionallydifferentllms", "naj", "essc", "vvixrajournaloflatexclassfilesvolnoseptember", "table", "comparison", "test", "case", "generation", "prompt", "different", "llm", "three", "key", "module", "diversityguided", "line", "coverage", "rate", "across", "different", "llm", "using", "prompt", "generation", "failuredriven", "rule", "induction", "domain", "defectsj", "benchmark", "contextual", "knowledge", "extraction", "diversityguided", "prompt", "prompt", "chatgpt", "llama", "generation", "module", "creates", "varied", "prompt", "exploring", "di", "writeunittestsfortheprovidedjavaclassesto", "verse", "modification", "path", "prompt", "optimization", "testthemethodsandfunctionalitiesofeachclass", "approach", "prevents", "premature", "convergence", "local", "optimum", "en", "writeunittestsforthegivenjavaclassesto", "ensureproperfunctionalityofthemethods", "suringamorecomprehensiveexplorationofthepromptspace", "writetestcasesforthegivenjavaclassto", "failuredriven", "rule", "induction", "module", "aim", "identifying", "ensurethecorrectbehaviorofitsmethods", "promising", "optimization", "direction", "reflecting", "common", "error", "generated", "test", "case", "guide", "optimization", "process", "maybebestsuitedtodifferentpromptsforinstanceasshown", "transforming", "reflection", "result", "rule", "rule", "table", "preliminary", "experiment", "three", "prompt", "incorporated", "prompt", "prevent", "recurring", "er", "subset", "defectsj", "reveals", "varying", "performance", "across", "rorsfurthermorethedomaincontextualknowledgeextraction", "different", "llm", "specifically", "best", "prompt", "chatgpt", "moduleprovidesllmswithbothinfileandcrossfilecontext", "achieves", "line", "coverage", "rate", "worst", "one", "information", "inheritance", "relationship", "information", "achieves", "indicating", "prompt", "choice", "helpthemgenerateaccuratetestcasestheoptimizedprompt", "greatly", "influence", "performance", "llm", "test", "case", "gen", "induced", "rule", "extracted", "context", "information", "eration", "plain", "prompt", "may", "yield", "satisfactory", "result", "integrated", "together", "form", "final", "prompt", "test", "case", "furthermore", "analysis", "reveals", "prompt", "performing", "generationtoevaluatetheeffectivenessofmapsweconduct", "best", "chatgpt", "actually", "performs", "worst", "applied", "experiment", "popular", "benchmark", "defectsj", "llama", "therefore", "given", "considerable", "time", "apply", "map", "three", "popular", "llm", "including", "chatgpt", "required", "manual", "prompt", "design", "automated", "generation", "llama", "qwen", "compare", "four", "tailored", "prompt", "different", "llm", "worth", "studying", "stateoftheart", "prompt", "optimization", "approach", "experi", "received", "adequate", "attention", "mental", "result", "demonstrate", "map", "outperforms", "baseline", "achieve", "llmtailored", "prompt", "one", "potential", "approach", "method", "large", "margin", "achieving", "higher", "line", "leverage", "prompt", "optimization", "method", "natural", "coverage", "rate", "higher", "branch", "coverage", "rate", "language", "processing", "nlp", "field", "method", "average", "besides", "experiment", "different", "llm", "reveal", "typically", "use", "llm", "evolutionary", "algorithm", "map", "effectively", "generate", "suitable", "prompt", "iteratively", "search", "discrete", "natural", "language", "space", "llm", "surpassing", "manually", "designed", "prompt", "effective", "prompt", "generateandvalidate", "approach", "contribution", "summary", "main", "contribution", "however", "applied", "test", "case", "generation", "method", "work", "follows", "fallshortofachievingpromisingresultsduetothreemainlimi", "tothebestofourknowledgethispaperpresentsthefirst", "tationslowdiversityingeneratedpromptsthesemethods", "study", "automatically", "producing", "llmtailored", "prompt", "optimize", "prompt", "simply", "combining", "mutating", "existing", "test", "case", "generation", "one", "using", "llm", "ignoring", "diversity", "generated", "propose", "novel", "method", "map", "effectively", "im", "prompt", "potentially", "lead", "insufficient", "exploration", "prof", "prompt", "optimization", "process", "integrating", "vast", "natural", "language", "search", "space", "consequently", "diversityguided", "prompt", "generation", "failuredriven", "rule", "optimization", "process", "may", "converge", "prematurely", "local", "op", "induction", "domain", "contextual", "knowledge", "extraction", "tima", "hindering", "discovery", "suitable", "prompt", "extensive", "experiment", "three", "popular", "llm", "demon", "lackofproperguidanceonavoidingcommonerrorsexisting", "strate", "method", "substantially", "outperforms", "baseline", "method", "generate", "new", "prompt", "based", "solely", "existing", "one", "approach", "effectively", "generate", "tailored", "prompt", "without", "considering", "recurring", "error", "result", "test", "different", "llm", "case", "produced", "optimized", "prompt", "often", "exhibit", "organizationtherestofthispaperisorganizedasfollows", "issue", "generated", "unoptimized", "prompt", "therefore", "section", "ii", "describes", "background", "an", "show", "motivating", "important", "effectively", "guide", "optimization", "process", "example", "section", "iii", "detail", "three", "component", "directed", "improvement", "prevent", "llm", "making", "proposed", "map", "including", "domain", "contextual", "knowledge", "recurringerrorsabsenceofdomaincontextualknowledge", "extraction", "diversityguided", "prompt", "generation", "failure", "existing", "llmbased", "test", "case", "generation", "approach", "driven", "rule", "induction", "section", "iv", "describes", "evaluation", "typically", "utilize", "focal", "method", "limited", "infile", "method", "including", "research", "question", "datasets", "baseline", "context", "information", "lack", "necessary", "domain", "contextual", "andimplementationdetailssectionvpresentstheexperimen", "knowledge", "subclass", "inheritance", "class", "invocation", "tal", "result", "section", "vi", "discusses", "case", "threat", "informationwhichiscrucialforgeneratingaccuratetestcases", "validity", "section", "viii", "concludes", "paper", "given", "complex", "inheritance", "invocation", "relationship", "class", "function", "realworld", "project", "ii", "backgroundandmotivatingexample", "difficult", "llm", "infer", "information", "background", "paper", "propose", "map", "first", "llmtailored", "prompt", "generation", "method", "test", "case", "generation", "map", "work", "concentrate", "blackbox", "llmbased", "effectively", "automatically", "generates", "suitable", "prompt", "automatic", "prompt", "optimization", "apo", "given", "thejournaloflatexclassfilesvolnoseptember", "table", "ii", "example", "prompt", "generated", "opro", "optimization", "process", "underlined", "part", "represents", "similar", "pattern", "among", "prompt", "prompt", "create", "unit", "test", "verify", "correctness", "method", "implementation", "provided", "java", "class", "create", "unit", "test", "validate", "functionality", "specific", "method", "within", "provided", "java", "class", "create", "unit", "test", "ensure", "method", "supplied", "java", "class", "behave", "expected", "create", "unit", "test", "confirm", "method", "behave", "expected", "produce", "correct", "result", "widespread", "adoption", "powerful", "capability", "blackbox", "focal", "method", "llm", "apo", "utilizes", "llm", "optimize", "prompt", "iteratively", "public", "class", "timeseries", "extends", "series", "implement", "cloneableserializable", "searchingforthemosteffectiveoneswithinthediscretespace", "public", "timeseries", "createcopyint", "start", "int", "end", "natural", "language", "formally", "task", "work", "throw", "clonenotsupportedexception", "blackbox", "model", "small", "development", "set", "test", "set", "ifstart", "throw", "new", "illegalargumentexception", "dev", "requires", "start", "andascoringfunctionsapoaimsatdiscoveringan", "test", "ifend", "startthrow", "new", "advanced", "prompt", "p", "based", "dev", "natural", "language", "illegalargumentexceptionrequires", "start", "end", "space", "maximizes", "performance", "test", "set", "prompt", "p", "expected", "guide", "model", "directly", "test", "test", "case", "generated", "seed", "prompt", "generate", "highquality", "response", "instead", "timeconsuming", "public", "void", "testcreatecopyempty", "multiiteration", "generation", "test", "time", "typical", "apo", "timeseries", "timeseries", "new", "timeseriestest", "framework", "operates", "follows", "first", "begin", "set", "timeseries", "copy", "timeseriescreatecopy", "seed", "prompt", "obtained", "either", "manually", "timeseriesgetitemcount", "throughautomatictechniquesthentheseedpromptsareused", "test", "case", "generated", "optimized", "prompt", "generate", "response", "dev", "via", "response", "public", "void", "testcreatecopyempty", "evaluated", "using", "scoring", "function", "line", "timeseries", "timeseries", "new", "timeseriesemptytest", "coverage", "rate", "test", "case", "generation", "prompt", "perform", "timeseries", "copy", "timeseriescreatecopy", "well", "retained", "discarded", "timeseriesgetitemcount", "using", "retained", "prompt", "apo", "method", "query", "generate", "new", "prompt", "example", "representative", "method", "listing", "one", "example", "showing", "recurring", "error", "made", "opro", "generates", "new", "prompt", "prompting", "llm", "seed", "prompt", "optimized", "prompt", "error", "line", "prompt", "generate", "instruction", "different", "highlighted", "red", "theinstructionsandhasahigherscorethanalltheinstructions", "newly", "generated", "prompt", "integrated", "observation", "recurring", "common", "error", "across", "retained", "prompt", "next", "iteration", "optimization", "erations", "additionally", "analyzing", "generated", "test", "case", "several", "iteration", "best", "prompt", "used", "dev", "different", "iteration", "find", "test", "case", "final", "optimized", "prompt", "dev", "test", "generated", "optimized", "prompt", "tend", "exhibit", "error", "unoptimized", "one", "example", "shown", "b", "motivating", "example", "listingboththetestcasesgeneratedbytheseedpromptand", "first", "conduct", "preliminary", "study", "applying", "existing", "optimized", "prompt", "lack", "exception", "handling", "statement", "apo", "method", "realworld", "test", "case", "generation", "defectsj", "encounter", "runtime", "error", "existing", "prompt", "optimiza", "find", "struggle", "produce", "wellperforming", "prompt", "tion", "method", "rely", "solely", "current", "prompt", "without", "proper", "analyzing", "optimized", "prompt", "generated", "test", "case", "guidancemakingitdifficulttoachievedirectedimprovements", "identify", "three", "main", "problem", "current", "apo", "method", "address", "error", "made", "current", "prompt", "tackle", "observation", "low", "diversity", "prompt", "generated", "challenge", "propose", "leverage", "failed", "test", "case", "optimization", "process", "first", "upon", "inspection", "identify", "shortcoming", "current", "prompt", "specifically", "prompt", "generated", "optimization", "process", "find", "make", "llm", "reflect", "common", "error", "generated", "test", "case", "tend", "exhibit", "similar", "phrase", "lack", "diversity", "softly", "incorporate", "reflection", "output", "prompt", "table", "ii", "present", "example", "prompt", "generated", "concise", "rule", "help", "llm", "avoid", "making", "recurring", "error", "oprowhichcontainsimilarphrasessuchascreateunit", "focal", "method", "test", "provided", "java", "class", "low", "diversity", "public", "abstract", "class", "abstractcategoryitemrenderer", "constrains", "optimization", "process", "small", "portion", "extends", "abstractrenderer", "implement", "discrete", "natural", "language", "search", "space", "limiting", "exploration", "categoryitemrenderer", "cloneable", "publiccloneable", "serializable", "potentially", "effective", "alternative", "phrase", "make", "public", "categoryitemlabelgenerator", "search", "process", "susceptible", "convergence", "local", "optimum", "getitemlabelgenerator", "yielding", "suboptimal", "performance", "therefore", "deal", "test", "case", "problem", "first", "key", "idea", "method", "improve", "public", "void", "testfindrangeboundsvaliddataset", "diversity", "generated", "prompt", "enforcing", "use", "abstractcategoryitemrenderer", "renderer", "different", "modification", "method", "optimization", "process", "new", "abstractcategoryitemrendererjournaloflatexclassfilesvolnoseptember", "seed", "domain", "contextual", "knowledge", "extraction", "diversityguided", "prompt", "generation", "prompt", "prompt", "cov", "rate", "modification", "method", "search", "space", "class", "class", "c", "cl", "la", "s", "b", "c", "w", "wr", "ri", "te", "e", "u", "un", "ni", "ed", "xe", "pn", "oti", "sfy", "e", "e", "px", "oc", "tee", "np", "tt", "ii", "ao", "ln", "ba", "ul", "g", "sc", "e", "n", "arios", "n", "pe", "row", "pt", "focal", "method", "local", "context", "global", "context", "write", "test", "cover", "typical", "atypical", "selected", "write", "unit", "prompt", "domain", "prompt", "selection", "modification", "generation", "new", "prompt", "generation", "initialization", "knowledge", "augmentation", "failuredriven", "rule", "induction", "current", "prompt", "test", "case", "reflection", "feedback", "error", "induced", "write", "diverse", "unit", "test", "xxx", "avoid", "java", "class", "xn", "p", "tr", "ro", "ab", "nle", "sm", "fo", "w", "rme", "ac", "ta", "nx", "xx", "pe", "rom", "mp", "po", "tr", "l", "pe", "rom", "mp", "po", "tr", "l", "pe", "rom", "mp", "po", "tr", "l", "fop", "lle", "oc", "wif", "inic", "ga", "l", "rly", "u", "l", "ep", "sle", "e", "follow", "generation", "w", "sae", "mig", "ph", "lt", "ie", "nd", "g", "r", "ule", "evaluation", "public", "void", "setticklabelinsets", "failure", "information", "selection", "error", "reflection", "rule", "validation", "update", "fig", "overview", "map", "workflow", "algorithm", "algorithm", "map", "listingoneexampleillustratingtheissueoflackingdomain", "input", "iteration", "number", "seed", "prompt", "p", "domain", "contex", "context", "information", "error", "line", "highlighted", "red", "tual", "knowledge", "c", "llm", "output", "final", "prompt", "observation", "lack", "domain", "contextual", "knowl", "r", "h", "initialize", "set", "rule", "r", "edge", "finally", "thoroughly", "analyzed", "focal", "meth", "handled", "failure", "h", "previous", "iteration", "od", "prompt", "llm", "failed", "generate", "correct", "test", "case", "primary", "issue", "identified", "evaluate", "formatprc", "sampled", "develop", "lack", "domain", "contextual", "knowledge", "illustrated", "ment", "set", "listing", "given", "focal", "method", "abstract", "pnrnh", "promptimprovementprhm", "class", "abstractcategoryitemrenderer", "gener", "c", "ated", "test", "case", "directly", "initialize", "abstract", "class", "rrnr", "h", "h", "nh", "lead", "error", "abstractcategoryitemrenderer", "p", "selecttopp", "select", "best", "prompt", "p", "abstract", "can", "not", "instantiated", "without", "knowledge", "return", "formatprc", "formalize", "final", "prompt", "subclass", "llm", "can", "not", "generate", "test", "case", "correctly", "initialize", "class", "invoke", "method", "therefore", "another", "keyideaofmapsistoextracttherelevantdomaincontextual", "finally", "bestoptimized", "instruction", "diversityguided", "information", "provide", "llm", "capturing", "contex", "prompt", "generation", "induced", "rule", "extracted", "context", "infor", "tual", "knowledge", "mationareintegratedtoconstructthefinalpromptfortestcase", "generation", "fig", "illustrates", "format", "final", "prompt", "iii", "proposedapproach", "following", "section", "introduce", "three", "module", "detail", "overview", "provide", "overview", "mapss", "workflow", "fig", "b", "domain", "contextual", "knowledge", "extraction", "map", "start", "set", "seed", "prompt", "augments", "focal", "method", "infile", "crossfile", "context", "domain", "contextual", "knowledge", "extraction", "module", "aim", "information", "domain", "contextual", "knowledge", "provide", "llm", "related", "projectlevel", "context", "infor", "extraction", "module", "iteration", "map", "first", "evaluates", "mation", "enabling", "generate", "accurate", "test", "case", "performance", "current", "prompt", "small", "de", "illustrated", "fig", "contextual", "knowledge", "divided", "velopment", "set", "diversityguided", "prompt", "generation", "two", "category", "infile", "contextual", "knowledge", "cross", "module", "selects", "topperforming", "prompt", "infers", "file", "contextual", "knowledge", "diversemodificationmethodswhichareusedtohelpgenerate", "infile", "contextual", "knowledge", "contains", "class", "sig", "createsvariedpromptsinthe", "failuredrivenruleinduction", "nature", "focal", "method", "signature", "member", "module", "map", "aggregate", "selects", "representative", "failure", "method", "class", "signature", "includes", "type", "name", "information", "failed", "test", "case", "induces", "concise", "rule", "class", "containing", "focal", "method", "could", "avoid", "failure", "using", "reflectionvalidation", "method", "helpllmsavoiddirectinitializationofabstractorprivate", "shown", "algorithm", "iterative", "optimization", "process", "class", "focal", "method", "specific", "method", "gen", "continues", "reaching", "maximum", "iteration", "number", "erate", "test", "case", "following", "previous", "research", "wejournaloflatexclassfilesvolnoseptember", "optimized", "write", "diverse", "unit", "test", "java", "class", "covering", "wide", "range", "scenario", "including", "normal", "case", "instruction", "edge", "case", "failure", "case", "boundary", "case", "ensure", "high", "test", "coverage", "specifically", "please", "follow", "following", "rule", "generating", "test", "case", "induced", "ensure", "necessary", "class", "imported", "beginning", "test", "file", "prevent", "error", "rule", "ensure", "class", "constructor", "match", "required", "parameter", "type", "consider", "public", "abstract", "class", "axis", "implement", "cloneable", "serializable", "class", "signature", "public", "void", "setticklabelinsetsrectangleinsets", "inset", "focal", "method", "ifinsetsnull", "throw", "new", "illegalargumentexceptionnull", "inset", "argument", "focal", "thisticklabelinsetsequalsinsets", "method", "thisticklabelinsets", "inset", "notifylistenersnew", "axischangeeventthis", "infile", "context", "focal", "method", "rectangleinsets", "getticklabelinsets", "member", "method", "domain", "void", "setticklabelinsetsrectangleinsets", "inset", "contextual", "knowledge", "avaible", "subclass", "inheritance", "public", "class", "categoryaxis", "extends", "axis", "implement", "cloneable", "serializable", "class", "definition", "input", "parameter", "invocation", "public", "class", "rectangleinsets", "implement", "serializable", "crossfile", "public", "rectangleinsetsdouble", "top", "double", "left", "double", "bottom", "double", "right", "thisunittypeabsolute", "top", "left", "bottom", "right", "context", "public", "rectangleinsetsunittype", "unittype", "double", "top", "double", "left", "double", "bottom", "double", "right", "fig", "illustration", "format", "final", "prompt", "extracted", "context", "information", "also", "incorporate", "function", "signature", "member", "constant", "prompt", "number", "following", "previous", "work", "methodswithintheclassasthefocalmethodmayinvoke", "modification", "method", "serve", "diverse", "exploration", "direction", "themandthesesignaturescanguidethecorrectusageof", "within", "discrete", "natural", "language", "search", "space", "map", "function", "leverage", "llm", "generate", "new", "prompt", "based", "crossfile", "contextual", "knowledge", "refers", "con", "modification", "method", "sequentially", "line", "finally", "text", "information", "file", "within", "project", "selected", "prompt", "newly", "generated", "prompt", "propose", "extract", "two", "type", "crossfile", "information", "combined", "serve", "new", "prompt", "next", "iteration", "critical", "test", "case", "generation", "ignored", "optimization", "previous", "work", "namely", "class", "inheritance", "information", "class", "invocation", "information", "focal", "method", "failuredriven", "rule", "induction", "abstract", "private", "class", "scan", "entire", "project", "locate", "subclass", "extract", "class", "signature", "thefailuredrivenruleinductionmoduleaimsatidentifying", "subclass", "information", "enables", "llm", "properly", "promising", "optimization", "direction", "avoiding", "llm", "make", "instantiatetheclasswithinthetestcasefurthermorefor", "recurringerrorsitleveragescommonfailuresingeneratedtest", "class", "invocation", "information", "identify", "type", "case", "identify", "part", "existing", "prompt", "need", "argument", "focal", "method", "trace", "definition", "improvement", "induces", "rule", "optimize", "prompt", "using", "userdefined", "type", "extract", "signature", "reflectionvalidation", "method", "shown", "fig", "constructor", "invocation", "information", "aid", "llm", "process", "contains", "three", "phase", "failure", "information", "selection", "using", "correct", "input", "argument", "focal", "method", "error", "reflection", "rule", "validation", "detail", "illustrated", "algorithm", "failureinformationselection", "toidentifyshortcomings", "c", "diversityguided", "prompt", "generation", "current", "prompt", "propose", "delve", "failed", "test", "diversityguided", "prompt", "generation", "module", "aim", "case", "generated", "current", "prompt", "select", "common", "producing", "diverse", "prompt", "foster", "comprehensive", "error", "specifically", "map", "first", "collect", "failed", "test", "case", "exploration", "prompt", "space", "enforcing", "use", "generated", "selected", "prompt", "sp", "associated", "different", "modification", "method", "illustrated", "fig", "correspondingfocalmethodanderrormessagesthenmaps", "algorithm", "evaluating", "performance", "current", "aggregate", "failure", "information", "f", "based", "typical", "prompt", "evaluation", "set", "map", "selects", "topk", "dbscan", "clustering", "algorithm", "line", "determine", "prompt", "highest", "average", "line", "coverage", "branch", "failure", "address", "iteration", "employ", "coverage", "using", "selected", "sample", "map", "first", "leverage", "weighted", "sampling", "method", "weight", "cluster", "llm", "generate", "n", "distinct", "modification", "method", "based", "two", "factor", "size", "similarity", "failure", "current", "prompt", "based", "modification", "prompt", "template", "information", "handled", "failure", "h", "previous", "iteration", "shown", "fig", "line", "n", "sizepk", "larger", "cluster", "size", "indicates", "higher", "probability", "failure", "sizep", "indicates", "number", "seed", "prompt", "maintain", "type", "assign", "larger", "weight", "similarityjournaloflatexclassfilesvolnoseptember", "algorithm", "promptimprovement", "input", "promptspexistingruleserhandledfailureshllmmdomaincontextualknowledgecnewpromptsnumber", "n", "output", "optimized", "prompt", "op", "new", "induced", "rule", "nr", "new", "handled", "failure", "nh", "op", "nr", "diversityguided", "prompt", "generation", "sp", "selecttoppsizepn", "select", "top", "k", "prompt", "p", "generate", "n", "different", "modification", "method", "using", "p", "generate", "new", "prompt", "using", "based", "sp", "opinsertp", "op", "op", "sp", "failuredriven", "rule", "induction", "f", "clusterfailureinfosp", "clustering", "dbscan", "f", "samplerepresentativeclusterhf", "sample", "eq", "e", "reflectionf", "prompt", "get", "explanation", "solution", "r", "summarizees", "prompt", "transform", "rule", "r", "r", "formatselecttopperrc", "formatselecttopperc", "nrinsertr", "nr", "selecttopnr", "nh", "f", "select", "best", "rule", "nr", "nr", "empty", "return", "op", "nr", "nh", "h", "prevent", "model", "getting", "stuck", "rule", "validation", "maintain", "quality", "induced", "difficulttosolve", "issue", "map", "measure", "similarity", "rulesthispartaimsatretainingonlythemosteffectiveonesby", "betweenthefailuresineachclusterandthoseinhandassigns", "validatingeachnewlygeneratedruleandincorporatingthebest", "lower", "weight", "cluster", "higher", "similarity", "specifically", "one", "prompt", "end", "shown", "line", "weight", "calculated", "follows", "algorithm", "map", "first", "construct", "temporary", "prompt", "newly", "generated", "rule", "optimized", "instruction", "part", "edf", "h", "sim", "max", "temporary", "prompt", "bestperforming", "one", "p", "hh", "maxlenf", "ilenh", "induced", "rule", "part", "temporary", "prompt", "includes", "sizef", "sim", "existing", "rule", "er", "newly", "generated", "rule", "weight", "cidn", "sizef", "sim", "r", "map", "evaluates", "performance", "temporary", "j", "j", "j", "prompt", "sampled", "development", "set", "incorporates", "ed", "denotes", "edit", "distance", "size", "denotes", "rule", "corresponding", "temporary", "prompt", "achieves", "corresponding", "cluster", "size", "f", "denote", "failure", "infor", "highest", "performance", "final", "prompt", "line", "mation", "ith", "cluster", "center", "sample", "handled", "failure", "h", "previous", "iteration", "respectively", "error", "reflection", "selected", "failure", "information", "iv", "experimentalsetup", "f", "part", "aim", "enhance", "prompt", "incorporating", "ef", "research", "question", "fective", "mitigation", "strategy", "prevent", "llm", "repeating", "evaluation", "focus", "following", "four", "research", "error", "first", "map", "chooses", "test", "case", "whose", "question", "failure", "information", "exhibit", "lowest", "euclidean", "distance", "cluster", "center", "f", "construct", "reflection", "prompt", "rq", "effective", "map", "compared", "existing", "depicted", "fig", "b", "reflection", "prompt", "used", "prompt", "optimization", "method", "instruct", "llm", "provide", "detailed", "explanation", "rq", "map", "able", "generate", "tailored", "prompt", "dif", "solution", "failure", "information", "line", "additionally", "ferent", "llm", "ensure", "solution", "applied", "example", "rq", "impact", "module", "perfor", "andnotjustthegivenonesthereflectionpromptalsorequires", "mance", "map", "model", "remove", "examplespecific", "information", "make", "rq", "mapss", "performance", "vary", "different", "thesolutionsapplicabletoothersimilarcasestoavoidpoten", "experimental", "setting", "tialperformancedegradationbroughtbylengthyprompts", "study", "rq", "conduct", "comprehensive", "evaluation", "propose", "soft", "incorporation", "reflection", "output", "map", "comparing", "four", "representative", "prompt", "converting", "concise", "rule", "specifically", "map", "task", "optimization", "method", "three", "popular", "llm", "rq", "llm", "transforming", "explanation", "solution", "assess", "mapss", "ability", "generate", "llmtailored", "prompt", "structured", "rule", "r", "based", "transformation", "prompt", "different", "llm", "evaluating", "performance", "optimized", "template", "shown", "fig", "c", "line", "prompt", "produced", "map", "manually", "designed", "promptsjournaloflatexclassfilesvolnoseptember", "modification", "prompt", "template", "b", "reflection", "prompt", "template", "c", "transformation", "prompt", "template", "system", "prompt", "system", "prompt", "system", "prompt", "tutor", "help", "write", "software", "engineer", "help", "tutor", "help", "write", "rule", "suggestion", "please", "wrap", "suggestion", "analyze", "program", "give", "suggestion", "directly", "give", "content", "rule", "start", "end", "user", "prompt", "user", "prompt", "user", "prompt", "example", "buggy", "unit", "test", "along", "example", "common", "mistake", "prompt", "java", "unit", "test", "generation", "error", "message", "please", "identify", "cause", "student", "make", "writing", "unit", "test", "please", "write", "n", "different", "modification", "suggestion", "error", "provide", "strategy", "avoid", "solution", "based", "example", "please", "select", "prompt", "make", "modified", "prompt", "error", "future", "ensure", "one", "effective", "rule", "rewrite", "one", "better", "help", "student", "understand", "task", "write", "recommendation", "broadly", "applicable", "similar", "precise", "sentence", "format", "ensure", "diverse", "unit", "test", "high", "coverage", "rate", "type", "error", "help", "student", "avoid", "mistake", "selected", "prompt", "test", "case", "error", "information", "future", "unit", "test", "explanation", "solution", "fig", "prompt", "template", "map", "complete", "one", "found", "replication", "package", "table", "iii", "statistic", "defectsj", "benchmark", "c", "baseline", "project", "abbr", "bugnumber", "focalclass", "focalmethod", "provide", "comprehensive", "evaluation", "experiment", "three", "popular", "llm", "compare", "map", "four", "represen", "commonscli", "cli", "commonscsv", "csv", "tative", "prompt", "optimization", "method", "detail", "gson", "gson", "forllmsweselectthefollowingpowerfulllmsincode", "jfreechart", "chart", "related", "task", "evaluation", "commonslang", "lang", "chatgptisapopularmodelknownforitsversatile", "capabilitiesacrossvariousfieldssuchascodegeneration", "closedsource", "model", "developed", "openai", "different", "llm", "rq", "remove", "different", "module", "use", "latest", "version", "gptturbo", "ex", "mapstoevaluatetheirindividualcontributionsforrqwe", "periments", "investigate", "mapss", "performance", "different", "experimental", "llamaisafamilyofstateoftheartopensource", "settingsincludingthenumberofseedpromptsthenumberof", "llm", "different", "size", "including", "b", "b", "generatedpromptsperiterationnandthemaximumiteration", "b", "paper", "use", "instructiontuned", "llama", "number", "binstruct", "experiment", "qwen", "opensource", "large", "language", "model", "b", "datasets", "metric", "achievespromisinginavarietyofcodeintelligencetasks", "evaluate", "map", "widelyused", "defectsj", "ithasakcontextlengthtodealwithprojectlevellong", "dataset", "following", "previous", "study", "use", "five", "codespecificallywechooseqwenbinstructinthis", "commonly", "used", "java", "project", "dataset", "including", "paper", "apachecommonscliapachecommonscsvgooglegson", "prompt", "optimization", "method", "compare", "map", "jfreechartandapachecommonslangforeachprojectwe", "basic", "prompt", "four", "stateoftheart", "prompt", "opti", "usethefixedversionsusedbyexistingworkforevaluation", "mization", "method", "project", "span", "diverse", "domain", "including", "command", "basicdenotestheperformanceofthebestseedpromptit", "line", "interface", "data", "processing", "serialization", "visualization", "isusedtomeasurehowmuchimprovementscouldprompt", "utility", "library", "respectively", "table", "iii", "present", "overall", "optimization", "method", "achieve", "information", "dataset", "detailed", "information", "apeisatypicalpromptoptimizationmethodthatdi", "specific", "version", "commit", "hash", "found", "rectlyasksllmstogeneratevariantsforcurrentprompts", "replication", "package", "evaluation", "metric", "keep", "semantic", "meaning", "iteration", "follow", "previous", "work", "adopt", "two", "popular", "opro", "incorporates", "performance", "infor", "metricstoevaluatetheperformanceofmapsandthebaseline", "mation", "let", "llm", "generate", "new", "prompt", "approach", "enhance", "test", "accuracy", "based", "existing", "prompt", "line", "coverage", "measure", "percentage", "code", "performance", "linesexecutedduringtestingitcheckswhethereachline", "evoprompt", "stateoftheart", "prompt", "opti", "source", "code", "executed", "least", "ie", "line", "mization", "method", "generates", "new", "prompt", "based", "coverage", "nu", "tm", "otb", "ae", "lr", "uf", "bx", "ee", "rcu", "ot", "fe", "ld", "inl", "ein", "s", "line", "evolutionaryoperatorsithastwoversions", "evoprompt", "covered", "passed", "test", "case", "used", "calculation", "ga", "evoprompt", "de", "use", "genetic", "branch", "coverage", "measure", "percentage", "algorithm", "differential", "evolution", "respectively", "branch", "executed", "testing", "check", "whether", "branch", "control", "structure", "executed", "ie", "branch", "coverage", "numberofexecutedbranches", "implementation", "totalnumberofbranches", "branch", "covered", "passed", "test", "case", "used", "inourexperimentsthenumberofseedpromptsthenumber", "calculation", "generated", "prompt", "per", "iteration", "n", "maximumjournaloflatexclassfilesvolnoseptember", "table", "iv", "comparison", "prompt", "optimization", "method", "chatgpt", "number", "denotes", "standard", "deviation", "project", "chart", "cli", "csv", "gson", "lang", "average", "linecoverage", "basic", "ape", "opro", "evopromptga", "evopromptde", "map", "branchcoverage", "basic", "ape", "opro", "evopromptga", "evopromptde", "map", "iteration", "number", "set", "respectively", "simply", "combining", "mutating", "existing", "prompt", "difficult", "impact", "different", "experimental", "setting", "discussed", "produce", "effective", "prompt", "test", "case", "generation", "section", "vd", "repeat", "map", "three", "time", "report", "average", "result", "variance", "eliminate", "influence", "map", "achieves", "substantial", "improvement", "baseline", "sampling", "fluctuation", "llm", "prompt", "method", "seen", "table", "ivvi", "map", "consid", "optimization", "stage", "randomly", "sample", "ten", "bug", "erably", "outperforms", "baseline", "method", "across", "llm", "defectsjbenchmarkasourdevelopmentsetd", "dev", "anduseall", "example", "compared", "strongest", "baseline", "method", "bug", "test", "set", "test", "present", "sampled", "development", "evoprompt", "ga", "map", "achieves", "average", "improvement", "set", "dev", "replication", "package", "save", "manual", "line", "coverage", "branch", "coverage", "effortsweobtaintheseedpromptsautomaticallybychatgpt", "respectively", "result", "demonstrate", "effectiveness", "existing", "automatic", "prompt", "engineer", "method", "map", "finding", "effective", "prompt", "within", "vast", "search", "ensure", "fair", "comparison", "use", "development", "space", "set", "seed", "prompt", "tool", "baseline", "method", "seed", "prompt", "prompt", "template", "used", "work", "theperformanceofdifferentllmsondifferentprojects", "found", "replication", "package", "conduct", "varies", "comparing", "performance", "different", "project", "experiment", "ubuntu", "server", "core", "intel", "acrossdifferentllmswefurtherobservethatdifferentllms", "xeon", "platinum", "cpu", "tend", "perform", "well", "different", "project", "instance", "shown", "table", "ivvi", "although", "overall", "performance", "v", "experimentalresults", "chatgpt", "llama", "basic", "prompt", "similar", "performance", "individual", "project", "exhibit", "large", "differ", "rq", "performance", "evaluation", "encesspecificallyonthelangprojectchatgptoutperforms", "evaluate", "effectiveness", "map", "test", "case", "gen", "llama", "qwen", "term", "eration", "compare", "four", "representative", "prompt", "op", "line", "coverage", "respectively", "csv", "project", "timization", "method", "across", "three", "popular", "llm", "table", "iv", "performance", "chatgpt", "much", "worse", "llama", "vi", "present", "performance", "map", "along", "baseline", "qwen", "decrease", "term", "method", "defectsj", "method", "provide", "line", "coverage", "respectively", "indicates", "different", "llm", "average", "performance", "across", "bug", "well", "detailed", "tend", "excel", "different", "domain", "also", "demonstrates", "average", "result", "project", "based", "result", "importance", "building", "tailored", "prompt", "different", "llm", "derive", "following", "finding", "existing", "prompt", "optimization", "method", "struggle", "pro", "map", "could", "achieve", "higher", "improvement", "duce", "effective", "prompt", "test", "case", "generation", "com", "project", "seed", "prompt", "perform", "well", "paring", "performance", "basic", "prompt", "four", "baseline", "last", "shown", "table", "ivvi", "find", "improvement", "methodswecanobservethatexistingmethodsstruggletopro", "achieved", "map", "different", "project", "also", "vary", "across", "duceeffectivepromptsfortestcasegenerationspecificallyas", "different", "llm", "instance", "lang", "project", "relative", "shownintableivthebestperformingbaselineevoprompt", "improvementonchatgptandqwenareand", "ga", "achieve", "improvement", "respectively", "whereas", "csv", "project", "improvement", "thebasicpromptinlinecoverageandbranchcoveragerespec", "chatgpt", "qwen", "respectively", "tively", "moreover", "method", "like", "ape", "opro", "even", "perform", "result", "demonstrate", "map", "achieve", "higher", "worse", "basic", "prompt", "term", "line", "coverage", "increase", "project", "llm", "excel", "decreasesofandrespectivelythissuggeststhat", "provide", "directed", "improvement", "tailored", "different", "llmsjournaloflatexclassfilesvolnoseptember", "table", "v", "comparison", "prompt", "optimization", "method", "llama", "number", "denotes", "standard", "deviation", "project", "chart", "cli", "csv", "gson", "lang", "average", "linecoverage", "basic", "ape", "opro", "evopromptga", "evopromptde", "map", "branchcoverage", "basic", "ape", "opro", "evopromptga", "evopromptde", "map", "table", "vi", "comparison", "prompt", "optimization", "method", "qwen", "number", "denotes", "standard", "deviation", "project", "chart", "cli", "csv", "gson", "lang", "average", "linecoverage", "basic", "ape", "opro", "evopromptga", "evopromptde", "map", "branchcoverage", "basic", "ape", "opro", "evopromptga", "evopromptde", "map", "table", "vii", "evaluation", "map", "generating", "tailored", "prompt", "different", "llm", "approach", "chatgpt", "llama", "qwen", "chatgpt", "llama", "qwen", "linecoverage", "branchcoverage", "chatgptsfinalprompt", "llamasfinalprompt", "qwensfinalprompt", "manuallydesignedprompt", "answer", "rq", "map", "effectively", "enhances", "prompt", "package", "based", "result", "following", "test", "case", "generation", "consistently", "outperforms", "baseline", "observation", "method", "across", "various", "llm", "achieving", "higher", "performance", "different", "prompt", "varies", "lot", "line", "coverage", "rate", "higher", "branch", "coverage", "rate", "comparing", "performance", "final", "prompt", "different", "compared", "strongest", "baseline", "modelswecanfindthattheperformanceofdifferentprompts", "llm", "varies", "lot", "specifically", "line", "coverage", "b", "rq", "llmtailored", "prompt", "generation", "evaluation", "rate", "branch", "coverage", "rate", "llama", "different", "final", "prompt", "range", "inthisrqwestudywhethermapscouldgeneratetailored", "respectively", "demonstrates", "importance", "prompt", "different", "llm", "achieve", "evaluate", "automated", "generating", "tailored", "prompt", "different", "llm", "performance", "three", "final", "prompt", "obtained", "three", "model", "model", "additionally", "also", "compare", "map", "effectively", "produce", "tailored", "prompt", "dif", "prompt", "used", "validate", "whether", "prompt", "built", "ferent", "llm", "table", "vii", "observe", "map", "could", "outperform", "manuallydesigned", "prompt", "model", "tends", "achieve", "best", "performance", "experimental", "result", "depicted", "table", "vii", "finalpromptforexampletheperformanceofchatgptsfinal", "detailedresultsoneachprojectcanbefoundinourreplication", "prompt", "outperforms", "final", "prompt", "obtained", "llamajournaloflatexclassfilesvolnoseptember", "table", "viii", "ablation", "study", "map", "approach", "linecoverage", "branchcoverage", "map", "wodomaincontextualknowledgeextraction", "chatgpt", "wodiversityguidedpromptgeneration", "wofailuredrivenruleinduction", "onlydomaincontextualknowledgeextraction", "map", "wodomaincontextualknowledgeextraction", "llama", "wodiversityguidedpromptgeneration", "wofailuredrivenruleinduction", "onlydomaincontextualknowledgeextraction", "map", "wodomaincontextualknowledgeextraction", "qwen", "wodiversityguidedpromptgeneration", "wofailuredrivenruleinduction", "onlydomaincontextualknowledgeextraction", "qwen", "term", "line", "coverage", "demonstrates", "importance", "prompt", "diversity", "chatgptthisindicatesthatmapscouldeffectivelyproduce", "search", "space", "exploration", "process", "tailored", "prompt", "llm", "failuredrivenruleinductionweconductthisexperiment", "prompt", "optimized", "map", "outperform", "manually", "removing", "induced", "rule", "final", "prompt", "designed", "prompt", "additionally", "prompt", "obtained", "table", "viii", "observe", "without", "failuredriven", "rule", "map", "also", "outperforms", "line", "coverage", "manually", "induction", "performance", "map", "drop", "lot", "across", "designed", "prompt", "chatgpt", "llm", "specifically", "chatgpt", "line", "coverage", "decrease", "llama", "qwen", "respectively", "result", "demon", "branch", "coverage", "respectively", "strate", "mapss", "efficacy", "automatically", "crafting", "effective", "indicatesthebenefitsofusingllminducedrulestoguidethe", "llmtailored", "prompt", "optimizationprocessandavoidllmsmakingrecurringerrors", "show", "case", "section", "via", "illustration", "answer", "rq", "performance", "different", "prompt", "domain", "contextual", "knowledge", "extraction", "varies", "lot", "map", "could", "effectively", "produce", "tailored", "domain", "contextual", "knowledge", "extraction", "module", "provides", "prompt", "different", "llm", "significant", "performance", "gain", "evaluate", "much", "could", "module", "bring", "basic", "prompt", "ensurefairnessincomparisonweconductthisexperimentby", "removingboththediversityguidedpromptgenerationmodule", "c", "rq", "ablation", "study", "failuredriven", "rule", "induction", "module", "shown", "conduct", "ablation", "study", "validate", "effectiveness", "table", "viii", "removing", "two", "part", "lead", "substantial", "eachmoduleinourmethodiedomaincontextualknowledge", "performance", "map", "specifically", "solely", "involving", "extraction", "diversityguided", "prompt", "generation", "failure", "main", "contextual", "knowledge", "extraction", "bring", "limited", "drivenruleinductiontheaverageresultsforeachmethodare", "improvement", "basic", "prompt", "ie", "improving", "line", "presented", "table", "viii", "detailed", "result", "project", "coverage", "branch", "coverage", "qwen", "available", "replication", "package", "respectively", "performance", "still", "fall", "behind", "map", "domain", "contextual", "knowledge", "extraction", "conduct", "large", "margin", "indicates", "simply", "combining", "thisexperimentbyremovingthecrossfilecontextinformation", "basic", "prompt", "context", "information", "without", "final", "prompt", "seen", "table", "viii", "excluding", "optimization", "achieve", "satisfactory", "performance", "crossfile", "context", "information", "dramatically", "degrades", "per", "answer", "rq", "module", "map", "contribute", "formance", "across", "llm", "specifically", "branch", "coverage", "performance", "removing", "domain", "contextual", "knowledge", "rate", "drop", "chatgpt", "llama", "extraction", "part", "lead", "largest", "performance", "decrease", "qwen", "respectively", "result", "demonstrate", "effectivenessofintegratingprojectcontextinformationtohelp", "llm", "generate", "accurate", "test", "case", "rq", "parameter", "analysis", "diversityguidedpromptgenerationtovalidatetheeffec", "tivenessofdiversityguidedpromptgenerationweexperiment", "section", "study", "different", "experimental", "set", "byreplacingtheoptimizedinstructionpartofthefinalprompt", "ting", "affect", "performance", "map", "baseline", "method", "withtheoneproducedbythebestbaselinemethodasshown", "including", "number", "seed", "prompt", "number", "gener", "table", "viii", "removing", "diversityguided", "prompt", "genus", "ated", "prompt", "n", "maximum", "iteration", "number", "tion", "lead", "consistent", "drop", "task", "metric", "parameter", "primarily", "influence", "prompt", "optimization", "example", "line", "coverage", "rate", "decrease", "processwereporttheirperformanceonthedevelopmentsetin", "chatgpt", "llama", "qwen", "respectively", "section", "study", "vary", "parameter", "underjournaloflatexclassfilesvolnoseptember", "evopromptga", "map", "egarevoc", "enil", "evopromptga", "map", "nnuummbebreor", "fosfe", "sedeepdro", "pmrpotmspt", "egarevoc", "enil", "b", "numnbuemrboferg", "eonfe", "sraeteedd", "pprroommpptst", "fig", "parameter", "analysis", "number", "seed", "prompt", "generated", "prompt", "chatgpt", "ape", "opro", "evopromptga", "evopromptde", "map", "iteration", "egarevoc", "enil", "ape", "opro", "evopromptga", "evopromptde", "map", "iteration", "chatgpt", "egarevoc", "enil", "ape", "opro", "evopromptga", "evopromptde", "map", "iteration", "b", "llama", "egarevoc", "enil", "c", "qwen", "fig", "parameter", "analysis", "iteration", "number", "analysis", "keep", "others", "constant", "analysis", "number", "performance", "basic", "prompt", "without", "optimization", "seed", "prompt", "generated", "prompt", "present", "map", "shown", "fig", "map", "achieves", "best", "result", "chatgpt", "complete", "result", "available", "performance", "case", "specifically", "map", "outperforms", "replicate", "package", "baseline", "method", "least", "line", "coverage", "number", "seed", "prompt", "conduct", "experiment", "maximum", "iteration", "number", "set", "three", "additionally", "due", "evaluate", "map", "baseline", "method", "perform", "dif", "low", "prompt", "diversity", "baseline", "method", "tend", "converge", "ferent", "numbersof", "seedprompts", "specificallywe", "use", "thebest", "local", "optimum", "first", "iteration", "fail", "achieve", "performingbaselineevopromptgaandsetthenumberof", "furtherimprovementincontrastmapscontinuallyenhances", "seed", "prompt", "respectively", "fig", "performance", "iteration", "wecanobservethatmapsconsistentlyachievesbetterperfor", "answer", "rq", "map", "consistently", "achieves", "best", "manceacrossdifferentnumbersofseedpromptsadditionally", "performance", "across", "different", "parameter", "setting", "hyper", "bycomparingtheperformanceunderdifferentnumbersofseed", "parameter", "setting", "number", "seed", "prompt", "set", "promptswecanfindthatmapsand", "evoprompt", "gatend", "n", "achieve", "effective", "result", "achieve", "better", "performance", "larger", "number", "seed", "prompt", "improvement", "five", "seed", "prompt", "vi", "discussion", "marginal", "therefore", "set", "number", "seed", "prompt", "case", "study", "five", "paper", "number", "generated", "prompt", "also", "study", "effect", "better", "understand", "map", "improves", "test", "case", "gen", "number", "generated", "prompt", "varying", "eration", "present", "two", "example", "final", "prompt", "cre", "shown", "fig", "b", "map", "consistently", "achieves", "better", "ated", "map", "resulting", "test", "case", "performance", "across", "different", "number", "generated", "prompt", "final", "prompt", "first", "fig", "show", "final", "prompt", "whilealargernumberofgeneratedpromptscanleadtobetter", "llama", "along", "generated", "test", "case", "based", "performance", "also", "increase", "cost", "therefore", "set", "focal", "method", "listing", "find", "number", "generated", "prompt", "two", "experiment", "following", "second", "induced", "rule", "llama", "correctly", "maximum", "iteration", "number", "study", "vary", "generates", "test", "case", "us", "try", "catch", "number", "maximum", "iteration", "number", "inves", "illegalargumentexception", "e", "test", "method", "tigatetheperformanceofpromptsineachiterationwepresent", "second", "fig", "b", "illustrates", "another", "example", "using", "chat", "result", "best", "prompt", "generated", "map", "gpt", "focal", "method", "taken", "listing", "com", "baselinemethodonthedevelopmentsetiterationrepresents", "pared", "incorrect", "test", "case", "generated", "baselinejournaloflatexclassfilesvolnoseptember", "final", "prompt", "llama", "final", "prompt", "chatgpt", "write", "comprehensive", "set", "unit", "test", "given", "write", "diverse", "unit", "test", "java", "class", "covering", "wide", "range", "java", "class", "covering", "happy", "path", "edge", "scenario", "including", "normal", "case", "edge", "case", "failure", "case", "case", "ensure", "method", "behave", "correctly", "boundary", "case", "ensure", "high", "test", "coverage", "validation", "various", "input", "scenario", "aiming", "minimum", "method", "correctness", "code", "coverage", "specifically", "please", "follow", "following", "rule", "writing", "test", "case", "specifically", "please", "follow", "following", "rule", "ensure", "necessary", "class", "imported", "beginning", "writing", "test", "case", "test", "file", "prevent", "error", "ensure", "necessary", "class", "method", "ensure", "class", "constructor", "match", "required", "field", "properly", "imported", "correctly", "spelled", "parameter", "type", "consider", "using", "factory", "method", "builder", "capitalized", "pattern", "flexibility", "object", "creation", "ensure", "calling", "method", "throw", "focal", "method", "checked", "exception", "either", "wrap", "call", "try", "public", "abstract", "class", "abstractcategoryitemrenderer", "catch", "block", "handle", "exception", "declare", "public", "range", "findrangeboundscategorydataset", "dataset", "exception", "thrown", "test", "method", "using", "throw", "keyword", "avaible", "subclass", "focal", "method", "public", "class", "arearenderer", "extends", "abstractcategoryitemrenderer", "implement", "cloneable", "publiccloneable", "serializable", "test", "case", "generated", "final", "prompt", "public", "void", "test", "case", "generated", "final", "prompt", "testcreatecopyemptyitemtimeseries", "throw", "clonenotsupportedexception", "public", "void", "testarearendererfindrangeboundsemptydataset", "timeseries", "series", "new", "timeseries", "int", "start", "arearenderer", "arearenderer", "new", "arearenderer", "int", "end", "timeseriesgetitemcount", "categorydataset", "dataset", "new", "defaultcategorydataset", "range", "range", "arearendererfindrangeboundsdataset", "try", "seriescreatecopystart", "end", "assertnullrange", "catch", "illegalargumentexception", "e", "case", "study", "llama", "b", "case", "study", "chatgpt", "fig", "two", "case", "showing", "difference", "optimized", "prompt", "different", "model", "optimized", "prompt", "help", "generate", "correct", "test", "case", "table", "ix", "comparison", "randoop", "atest", "chattester", "prompt", "listing", "crossfile", "contextual", "knowledge", "map", "optimized", "prompt", "allows", "model", "correctly", "ini", "tialize", "abstractcategoryitemrenderer", "class", "project", "linecoverage", "branchcoverage", "additionally", "comparing", "two", "final", "prompt", "obtained", "randoop", "map", "observe", "induced", "rule", "llama", "atest", "chatgpt", "different", "first", "rule", "two", "method", "chatgptbasic", "similar", "llama", "second", "rule", "focus", "exception", "chatgptmaps", "handling", "whereas", "chatgpts", "concern", "method", "parameter", "indicates", "model", "tend", "make", "different", "type", "error", "map", "effectively", "introduce", "tailored", "rule", "unitintonoteworthystatesatestisastateoftheartnon", "different", "llm", "llmbaseddeeplearningmodelthatfinetunesplbart", "moreover", "calculating", "average", "edit", "distance", "test", "case", "generation", "randoop", "reproduce", "based", "prompt", "obtained", "optimization", "iteration", "map", "gentestspl", "script", "provided", "defectsj", "find", "generates", "diverse", "prompt", "atest", "reproduce", "result", "based", "atests", "replicate", "optimization", "process", "specifically", "average", "edit", "distance", "package", "prompt", "map", "remarkably", "larger", "table", "ix", "present", "experimental", "result", "term", "line", "ofoprowhichaveragesonlyeditsasshownintableii", "coverage", "branch", "coverage", "compared", "three", "baseline", "demonstrates", "mapss", "effectiveness", "generating", "method", "chatgptmaps", "achieves", "highest", "line", "coverage", "diverse", "prompt", "optimization", "process", "ieandbranchcoverageieoutperform", "ing", "traditional", "method", "least", "b", "comparison", "method", "spectivelythisdemonstratesmapsseffectivenessinhelping", "comprehensively", "study", "advantage", "limitation", "llm", "generate", "test", "case", "high", "coverage", "besides", "llmsbased", "test", "case", "generation", "method", "compared", "comparing", "performance", "randoop", "chatgptbasic", "traditional", "approach", "previous", "deep", "learningbased", "ap", "chatgptmaps", "find", "performance", "chat", "proaches", "compare", "chatgptmaps", "two", "baseline", "gptbasicislowerthantraditionalmethodrandoopmeaning", "method", "including", "randoop", "atest", "randoop", "simply", "prompting", "llm", "achieve", "satisfactory", "widely", "used", "automated", "software", "testing", "tool", "employ", "result", "map", "produce", "suitable", "prompt", "llm", "randomfuzzingonunitapistoconstructprefixesthatleadthe", "make", "llm", "outperform", "traditional", "methodsjournaloflatexclassfilesvolnoseptember", "although", "also", "llmbased", "method", "model", "convert", "target", "method", "corresponding", "test", "chatunitest", "compare", "case", "assertion", "series", "recent", "study", "research", "orthogonal", "map", "focus", "optimizing", "employed", "deep", "learning", "technique", "test", "case", "generation", "tailored", "prompt", "test", "case", "generation", "formulating", "test", "case", "generation", "neural", "machine", "combined", "existing", "method", "incorporating", "static", "translation", "task", "train", "model", "convert", "target", "method", "information", "multiturn", "refinement", "method", "corresponding", "test", "case", "assertion", "example", "achieve", "better", "performance", "athenatest", "finetunes", "bart", "dataset", "designed", "test", "generation", "atest", "incorporates", "assertion", "knowledge", "test", "signature", "verification", "mechanism", "c", "threat", "validity", "achieving", "better", "result", "recently", "leveraging", "advancement", "identify", "two", "main", "threat", "validity", "study", "llm", "test", "case", "generation", "approach", "based", "llm", "limited", "llm", "given", "rapid", "development", "large", "alsobeenproposedandshownpromisingresultsforexample", "language", "model", "model", "covered", "paper", "codamosa", "leverage", "llm", "provide", "example", "test", "mitigate", "issue", "select", "three", "representative", "case", "undercovered", "function", "searchbased", "testing", "popular", "llm", "contain", "opensource", "model", "hitsacoveragestallchattesterincorporateschatgpt", "closedsource", "model", "additionally", "map", "model", "along", "iterative", "test", "refiner", "generate", "test", "different", "agnosticanddoesnotrequireaccesstothemodelsparameters", "work", "method", "serf", "first", "llm", "therefore", "believe", "map", "also", "achieve", "improvement", "tailoredpromptgenerationmethodfortestcasegenerationand", "llm", "combined", "existing", "method", "enhance", "limited", "programming", "language", "paper", "con", "performance", "besides", "method", "aim", "directly", "duct", "experiment", "using", "defectsj", "benchmark", "avoid", "generating", "lowquality", "test", "case", "optimized", "contains", "java", "project", "benchmark", "popular", "widely", "prompt", "instead", "timeconsuming", "multiiteration", "generation", "used", "previous", "work", "furthermore", "method", "language", "fixing", "test", "time", "agnostic", "easily", "adapted", "programming", "language", "future", "plan", "conduct", "experiment", "c", "llm", "software", "engineering", "datasets", "including", "language", "python", "largelanguagemodelshaverecentlybeenwidelyadopted", "vii", "relatedwork", "various", "software", "engineering", "task", "due", "impressive", "performance", "code", "generation", "understanding", "automatic", "prompt", "optimization", "example", "yuan", "et", "al", "evaluate", "performance", "automatically", "discovering", "optimal", "prompt", "emerged", "ofchatgptfortestcasegenerationandimproveitbyiterative", "animportantchallengeintheeraofllmsmostex", "testrefinergaoetalinvestigatehowtosettheincontext", "istingmethodsfollowaniterativepromptoptimizationprocess", "demonstration", "chatgpt", "code", "summarization", "code", "theystartwithasetofseedpromptsanditerativelysynthesize", "generation", "task", "chatrepair", "iteratively", "evaluates", "pro", "new", "prompt", "candidate", "evaluating", "performance", "select", "gram", "test", "case", "feed", "error", "message", "llm", "thetoponesforthenextiterationforexampleapeisa", "patch", "generation", "selfedit", "utilizes", "compiler", "typical", "prompt", "optimization", "method", "directly", "asks", "llm", "error", "message", "enhance", "correctness", "code", "generation", "generate", "variant", "current", "prompt", "maintaining", "li", "et", "al", "investigates", "feasibility", "slicing", "commer", "semantic", "meaning", "iteration", "opro", "cial", "blackbox", "llm", "using", "mediumsized", "backbone", "model", "incorporates", "performance", "information", "let", "llm", "sbllm", "combine", "searchbased", "method", "llm", "generatenewpromptsthatcanenhancethetestaccuracybased", "iterativelyimprovecodeefficiencydeepseekcoderisan", "onexistingpromptsandtheirperformance", "evoprompt", "opensource", "mixtureofexperts", "moe", "code", "language", "model", "stateoftheart", "prompt", "optimization", "method", "gen", "achieves", "stateoftheart", "performance", "across", "various", "code", "erates", "new", "prompt", "based", "evolutionary", "operator", "intelligence", "task", "starcoder", "advanced", "llm", "two", "version", "evoprompt", "ga", "evoprompt", "de", "trained", "programming", "language", "trained", "use", "genetic", "algorithm", "differential", "evolution", "stackdatasetandnaturallanguagetextfromwikipedia", "respectivelydifferentfromthoseworksthispaperfocuseson", "arxiv", "github", "issue", "magicoder", "recent", "model", "llmtailoredpromptoptimizationfortestcasegenerationand", "trained", "synthetic", "instruction", "data", "enhanced", "open", "investigates", "improving", "exploration", "search", "process", "source", "code", "snippet", "proposes", "ossinstruct", "produce", "diverse", "realistic", "instruction", "tuning", "data", "b", "test", "case", "generation", "opensourcecodesnippetstoaddressthebiasestypicallyfound", "synthetic", "data", "generated", "llm", "traditional", "method", "like", "randoop", "utilize", "random", "fuzzing", "unit", "apis", "construct", "prefix", "lead", "unit", "noteworthy", "state", "evosuite", "searchbased", "viii", "conclusion", "test", "generation", "strategy", "employ", "evolutionary", "algorithm", "inthispaperweintroducedanovelautomaticllmtailored", "autonomously", "craft", "test", "suite", "java", "class", "aimed", "prompt", "generation", "method", "map", "test", "case", "generation", "improving", "coverage", "rate", "series", "recent", "study", "optimization", "process", "map", "generates", "diverse", "employed", "deep", "learning", "technique", "training", "candidate", "prompt", "facilitate", "exploration", "promptjournaloflatexclassfilesvolnoseptember", "search", "space", "induces", "rule", "failure", "case", "avoid", "dubey", "jauhri", "pandey", "kadian", "aldahle", "letman", "recurring", "error", "additionally", "map", "integrates", "various", "mathur", "schelten", "yang", "fan", "goyal", "hartshorn", "ayangamitraasravankumarakorenevahinsvarkarao", "maincontextualknowledgeforgeneratingcorrecttestcasesin", "azhangarodriguezagregersonaspatarubrozierebbiron", "practical", "project", "extensive", "experiment", "defectsj", "show", "b", "tang", "b", "chern", "c", "caucheteux", "c", "nayak", "c", "bi", "c", "marra", "map", "outperforms", "existing", "prompt", "optimization", "meth", "c", "mcconnell", "c", "keller", "c", "touret", "c", "wu", "c", "wong", "c", "c", "ferrer", "cnikolaidisdallonsiusdsongdpintzdlivshitsdesiobu", "od", "replicate", "package", "work", "publicly", "available", "choudhary", "mahajan", "garciaolano", "perino", "hupkes", "httpszenodoorgrecords", "e", "lakomkin", "e", "albadawy", "e", "lobanova", "e", "dinan", "e", "smith", "fradenovicfzhanggsynnaevegleeglandersongnail", "g", "mialon", "g", "pang", "g", "cucurell", "h", "nguyen", "h", "korevaar", "h", "xu", "reference", "htouvronizaroviaibarraimkloumannimisraievtimov", "jcopetjleejgeffertjvranesjparkjmahadeokarjshah", "dmrafikrkmoseskpetersenandmmantylabenefitsand", "j", "van", "der", "linde", "j", "billock", "j", "hong", "j", "lee", "j", "fu", "j", "chi", "j", "huang", "limitation", "automated", "software", "testing", "systematic", "literature", "review", "jliujwangjyujbittonjspisakjparkjroccajjohnstun", "practitioner", "survey", "th", "international", "workshop", "automation", "jsaxejjiakvalwalakupasanikplawiakklikheafield", "ofsoftwaretestastzurichswitzerlandjune", "ieee", "andkstonethellamaherdofmodelscorrvolabs", "computersocietypp", "almasi", "h", "hemmati", "g", "fraser", "arcuri", "j", "benefelds", "qguorwangjguobliksongxtangliujbianand", "anindustrialevaluationofunittestgenerationfindingrealfaultsina", "yang", "connecting", "large", "language", "model", "evolutionary", "algo", "financial", "application", "th", "ieeeacm", "international", "conference", "rithmsyieldspowerfulpromptoptimizersinthetwelfthinternational", "software", "engineering", "software", "engineering", "practice", "track", "icse", "conference", "learning", "representation", "iclr", "vienna", "austria", "seipbuenosairesargentinamay", "ieeecomputer", "may", "openreviewnet", "societypp", "zhou", "muresanu", "z", "han", "k", "paster", "pitis", "h", "chan", "p", "runeson", "survey", "unit", "testing", "practice", "ieee", "softw", "vol", "j", "ba", "large", "language", "model", "humanlevel", "prompt", "engineer", "nopp", "eleventh", "international", "conference", "learning", "representation", "c", "pacheco", "ernst", "randoop", "feedbackdirected", "random", "iclrkigalirwandamay", "openreviewnet", "testing", "java", "companion", "nd", "annual", "acm", "sigplan", "j", "h", "holland", "adaptation", "natural", "artificial", "system", "intro", "conferenceonobjectorientedprogrammingsystemslanguagesand", "ductory", "analysis", "application", "biology", "control", "artificial", "applicationsoopslaoctobermontrealquebec", "intelligence", "mitpress", "canada", "acmpp", "r", "storn", "k", "price", "differential", "evolutiona", "simple", "efficient", "mtufanoddrainasvyatkovskiyskdengandnsundaresan", "heuristic", "global", "optimization", "continuous", "space", "journal", "unit", "test", "case", "generation", "transformer", "focal", "context", "arxiv", "globaloptimizationvolpp", "preprintarxiv", "g", "ryan", "jain", "shang", "wang", "x", "k", "ramanathan", "jwangyhuangcchenzliuswangandqwangsoftware", "b", "ray", "codeaware", "prompting", "study", "coverageguided", "test", "testingwithlargelanguagemodelssurveylandscapeandvisionieee", "generation", "regression", "setting", "using", "llm", "proc", "acm", "softw", "eng", "transsoftwareengvolnopp", "volnofsepp", "g", "fraser", "arcuri", "evosuite", "automatic", "test", "suite", "generation", "ayangbyangbhuibzhengbyuczhoucliclidliu", "forobjectorientedsoftwareinsigsoftfsethacmsigsoft", "f", "huang", "g", "dong", "h", "wei", "h", "lin", "j", "tang", "j", "wang", "j", "yang", "j", "tu", "symposium", "foundation", "software", "engineering", "fse", "jzhangjmajyangjxujzhoujbaijhejlinkdang", "esectheuropeansoftwareengineeringconferenceesec", "k", "lu", "k", "chen", "k", "yang", "li", "xue", "n", "ni", "p", "zhang", "p", "wang", "szegedhungaryseptember", "acmpp", "r", "peng", "r", "men", "r", "gao", "r", "lin", "wang", "bai", "tan", "zhu", "mlewisyliungoyalmghazvininejadamohamedolevy", "li", "liu", "w", "ge", "x", "deng", "x", "zhou", "x", "ren", "x", "zhang", "x", "wei", "v", "stoyanov", "l", "zettlemoyer", "bart", "denoising", "sequenceto", "x", "ren", "x", "liu", "fan", "yao", "zhang", "wan", "chu", "liu", "sequence", "pretraining", "natural", "language", "generation", "translation", "zcuizzhangzguoandzfanqwentechnicalreportcorr", "comprehension", "proceeding", "th", "annual", "meeting", "volabs", "associationforcomputationallinguisticsaclonlinejuly", "r", "x", "wang", "x", "zhou", "j", "li", "n", "du", "gui", "q", "zhang", "associationforcomputationallinguisticspp", "xhuangarelargelanguagemodelsgoodpromptoptimizerscorr", "alagarsamy", "c", "tantithamthavorn", "aleti", "atest", "assertion", "volabs", "augmentedautomatedtestcasegenerationcorrvolabs", "c", "yang", "x", "wang", "lu", "h", "liu", "q", "v", "le", "zhou", "x", "chen", "large", "language", "model", "optimizers", "twelfth", "international", "chatgptchatgpthttpschatopenaicom", "conference", "learning", "representation", "iclr", "vienna", "austria", "kojima", "gu", "reid", "matsuo", "iwasawa", "large", "may", "openreviewnet", "language", "model", "zeroshot", "reasoner", "advance", "neural", "information", "processing", "system", "annual", "conference", "neural", "ester", "h", "kriegel", "j", "sander", "x", "xu", "densitybased", "algo", "informationprocessingsystemsneuripsneworleansla", "rithm", "discovering", "cluster", "large", "spatial", "database", "noise", "usanovemberdecember", "proceeding", "second", "international", "conference", "knowledge", "z", "xiey", "chenc", "zhis", "dengand", "jyin", "chatunitesta", "chatgpt", "discoveryanddataminingkddportlandoregonusa", "aaai", "basedautomatedunittestgenerationtoolcorrvolabs", "presspp", "nfliuklinjhewittaparanjapembevilacquafpetroniand", "z", "yuan", "liu", "ding", "k", "wang", "chen", "x", "peng", "lou", "plianglostinthemiddlehowlanguagemodelsuselongcontexts", "evaluatingandimprovingchatgptforunittestgenerationprocacm", "transassoccomputlinguisticsvolpp", "softwengvolnofsepp", "g", "kamradt", "needle", "haystack", "pressure", "testing", "llm", "http", "gao", "x", "wen", "c", "gao", "w", "wang", "h", "zhang", "r", "lyu", "githubcomgkamradtllmtest", "needleinahaystack", "whatmakesgoodincontextdemonstrationsforcodeintelligencetasks", "map", "replication", "package", "httpszenodoorgrecords", "withllmsinthieeeacminternationalconferenceonautomated", "softwareengineeringaseluxembourgseptember", "ivankovic", "g", "petrovic", "r", "g", "fraser", "code", "coverage", "ieeepp", "googleinproceedingsoftheacmjointmeetingoneuropeansoftware", "h", "gonen", "iyer", "blevins", "n", "smith", "l", "zettlemoyer", "engineeringconferenceandsymposiumonthefoundationsofsoftware", "demystifying", "prompt", "language", "model", "via", "perplexity", "estimation", "engineeringesecsigsoftfsetallinnestoniaaugust", "finding", "association", "computational", "linguistics", "emnlp", "acmpp", "singaporedecember", "associationforcomputational", "w", "u", "ahmad", "chakraborty", "b", "ray", "k", "chang", "unified", "pre", "linguisticspp", "training", "program", "understanding", "generation", "proceeding", "r", "jalali", "ernst", "defectsj", "database", "existing", "theconferenceofthenorthamericanchapteroftheassociation", "fault", "enable", "controlled", "testing", "study", "java", "program", "inter", "forcomputationallinguisticshumanlanguagetechnologiesnaacl", "nationalsymposiumonsoftwaretestingandanalysisisstasan", "hlt", "online", "june", "association", "computational", "josecausajuly", "acmpp", "linguisticsppjournaloflatexclassfilesvolnoseptember", "atestatestreplicationpackagehttpsgithubcomawsmresearch", "atest", "showcase", "rpryzantditerjliytleeczhuandmzengautomatic", "prompt", "optimization", "gradient", "descent", "beam", "search", "proceedingsoftheconferenceonempiricalmethodsinnatural", "languageprocessingemnlpsingaporedecember", "associationforcomputationallinguisticspp", "h", "yu", "lou", "k", "sun", "ran", "xie", "hao", "li", "g", "li", "qwangautomatedassertiongenerationviainformationretrievaland", "itsintegrationwithdeeplearninginthieeeacmthinternational", "conferenceonsoftwareengineeringicsepittsburghpausa", "may", "acmpp", "wsunhlimyanyleiandhzhangrevisitingandimproving", "retrievalaugmented", "deep", "assertion", "generation", "th", "ieeeacm", "ternationalconferenceonautomatedsoftwareengineeringase", "luxembourgseptember", "ieeepp", "gao", "w", "mao", "c", "gao", "l", "li", "x", "hu", "x", "xia", "r", "lyu", "learninginthewildtowardsleveragingunlabeleddataforeffectively", "tuningpretrainedcodemodelsinproceedingsofthethieeeacm", "internationalconferenceonsoftwareengineeringicselisbon", "portugalapril", "acmpp", "clemieuxjpinalasklahiriandssencodamosaescaping", "coverage", "plateau", "test", "generation", "pretrained", "large", "language", "modelsinthieeeacminternationalconferenceonsoftwareen", "gineeringicsemelbourneaustraliamay", "ieee", "pp", "gao", "h", "zhang", "c", "gao", "c", "wang", "keeping", "pace", "ever", "increasingdatatowardscontinuallearningofcodeintelligencemodels", "inthieeeacminternationalconferenceonsoftwareengineering", "icsemelbourneaustraliamay", "ieeepp", "z", "yang", "f", "liu", "z", "yu", "j", "w", "keung", "j", "li", "liu", "hong", "x", "zjinandgliexploringandunleashingthepoweroflargelanguage", "modelsinautomatedcodetranslationprocacmsoftwengvol", "nofsepp", "gao", "c", "gao", "j", "zeng", "l", "nie", "x", "xia", "r", "lyu", "code", "structureguided", "transformer", "source", "code", "summarization", "acmtranssoftwengmethodolvolnopp", "zlicwangswangandcgaoprotectingintellectualproperty", "oflargelanguagemodelbasedcodegenerationapisviawatermarksin", "proceeding", "acm", "sigsac", "conference", "computer", "communicationssecurityccscopenhagendenmarknovember", "acmpp", "csxiaandlzhangkeeptheconversationgoingfixingout", "ofbugsforeachusingchatgptcorrvolabs", "k", "zhang", "z", "li", "j", "li", "g", "li", "z", "jin", "selfedit", "faultaware", "code", "editorforcodegenerationinproceedingsofthestannualmeeting", "association", "computational", "linguistics", "volume", "long", "paper", "acl", "toronto", "canada", "july", "association", "forcomputationallinguisticspp", "z", "li", "c", "wang", "p", "c", "liu", "wang", "wu", "c", "gao", "liu", "onextractingspecializedcodeabilitiesfromlargelanguagemodelsa", "feasibility", "study", "proceeding", "th", "ieeeacm", "international", "conference", "software", "engineering", "icse", "lisbon", "portugal", "april", "acmpp", "gao", "c", "gao", "w", "gu", "lyu", "searchbased", "llm", "code", "optimization", "ieeeacm", "th", "international", "conference", "softwareengineeringicse", "ieeecomputersocietypp", "dguoqzhudyangzxiekdongwzhanggchenxbi", "wu", "k", "li", "f", "luo", "xiong", "w", "liang", "deepseekcoder", "whenthelargelanguagemodelmeetsprogrammingtheriseofcode", "intelligencecorrvolabs", "lozhkov", "r", "li", "l", "b", "allal", "f", "cassano", "j", "lamypoirier", "n", "tazi", "tang", "pykhtar", "j", "liu", "wei", "liu", "tian", "kocetkov", "azuckerybelkadazwangqliudabulkhanovipaulzli", "wlimrisdaljlijzhutyzhuoezheltonozhskiinoo", "dadewyulkraunjainysuxhemdeyeabatiychai", "nmuennighoffxtangmoblokulovcakikimmaronecmou", "mishra", "gu", "b", "hui", "dao", "zebaze", "dehaene", "n", "patry", "cxujjmcauleyhhutscholakspaquetjrobinsoncj", "andersonnchapadosandetalstarcoderandthestackvthe", "nextgenerationcorrvolabs", "wei", "z", "wang", "j", "liu", "ding", "l", "zhang", "magicoder", "source", "codeisallyouneedcorrvolabs"], "sentences": ["journaloflatexclassfilesvolnoseptember prompt alchemist automated llmtailored prompt optimization test case generation shuzheng gao chaozheng wang cuiyun gao xiaoqian jiao chun yong chong gao michael r lyu chinese university hong kong hong kong china harbin institute technology shenzhen china school information technology monash university malaysia malaysia independent researcher china szgaocsecuhkeduhk adfgmailcom gaocuiyunhiteducn stuhiteducn chongchunyongmonashedu gaoshan csoutlookcom lyucsecuhkeduhk abstracttest case essential validating reliabil generation large language model ity quality software application recent study demonstrated capability large language model llm generate useful test case given source code however introduction existing work primarily relies humanwritten plain prompt test case play crucial role validating reliability often lead suboptimal result since performance llm highly influenced prompt moreover quality software application allowing theseapproachesusethesamepromptforallllmsoverlooking developerstoidentifyandrectifybugsanddefectsattheearly fact different llm might best suited different developmentstageitremarkablyenhancestheoverallstability promptsgiventhewidevarietyofpossiblepromptformulations software however manually writing test case automatically discovering optimal prompt llm challenging timeconsuming task consequently task present significant challenge although method automated prompt optimization natural language test case generation aim creating highquality processing field hard produce effective prompt test case automatically attracted developer test case generation task first method iteratively researcher attention recent year optimize prompt simply combining mutating existing traditional test case generation method evo one without proper guidance resulting prompt lack diversity tend repeat error generated suite randoop mainly employ searchbased test case second prompt generally lack domain constraintbased technique craft test suite recent ad contextual knowledge limiting llm performance task vancements deep learning introduced many learning paper introduce map llmtailored prompt basedtestgenerationapproachesforinstanceathenatest generation method test case generation map com finetunes bart dataset designed fortest generation prisesthreemainmodulesdiversityguidedpromptgeneration atest incorporates assertion knowledge failuredriven rule induction domain contextual knowl edge extraction specifically diversityguided prompt test signature verification mechanism achieving better generation module map creates varied prompt exploring result model aim leveraging general program diverse modification path optimization process ming knowledge acquired extensive developerwritten prevents optimization process converging local codecorporatogeneratemorecomprehensiveandmeaningful optimum failuredriven rule induction module aim iden test recently large language model llm tifying promising optimization direction reflecting common failure generated test case reflection output chatgpt gained widespread adoption various aresoftlyintegratedintopromptsbasedonaruletransformation software engineering se task including test case genus method domain contextual knowledge extraction module tion show promising result due powerful zero aimsatenrichingthepromptswithrelateddomainknowledgeby shot capability llm directly deployed incorporating infile crossfile context information stream task prompt engineering without requiring evaluatetheeffectivenessofmapswecompareitwithfourstate oftheart prompt optimization method across three popular finetuning example chatunitest harness llm experimental result demonstrate method capability llm employ generationvalidation outperforms baseline method large margin achieving repair mechanism rectify error generated test case higher line coverage rate higher branch yuan et al evaluate chatgpts performance test case coverage rate average moreover experiment different generation enhance iterative test refinement llmsshowthatourmethodcaneffectivelyfindthemostsuitable prompt llm process however existing llmbased work primarily relies index termssoftware testing debugging test case humanwrittenplainpromptswhichoftenleadstosuboptimal result since performance llm highly influ corresponding author author also affiliated peng cheng laboratory encedbythepromptsadditionallydifferentllms naj essc vvixrajournaloflatexclassfilesvolnoseptember table comparison test case generation prompt different llm three key module diversityguided line coverage rate across different llm using prompt generation failuredriven rule induction domain defectsj benchmark contextual knowledge extraction diversityguided prompt prompt chatgpt llama generation module creates varied prompt exploring di writeunittestsfortheprovidedjavaclassesto verse modification path prompt optimization testthemethodsandfunctionalitiesofeachclass approach prevents premature convergence local optimum en writeunittestsforthegivenjavaclassesto ensureproperfunctionalityofthemethods suringamorecomprehensiveexplorationofthepromptspace writetestcasesforthegivenjavaclassto failuredriven rule induction module aim identifying ensurethecorrectbehaviorofitsmethods promising optimization direction reflecting common error generated test case guide optimization process maybebestsuitedtodifferentpromptsforinstanceasshown transforming reflection result rule rule table preliminary experiment three prompt incorporated prompt prevent recurring er subset defectsj reveals varying performance across rorsfurthermorethedomaincontextualknowledgeextraction different llm specifically best prompt chatgpt moduleprovidesllmswithbothinfileandcrossfilecontext achieves line coverage rate worst one information inheritance relationship information achieves indicating prompt choice helpthemgenerateaccuratetestcasestheoptimizedprompt greatly influence performance llm test case gen induced rule extracted context information eration plain prompt may yield satisfactory result integrated together form final prompt test case furthermore analysis reveals prompt performing generationtoevaluatetheeffectivenessofmapsweconduct best chatgpt actually performs worst applied experiment popular benchmark defectsj llama therefore given considerable time apply map three popular llm including chatgpt required manual prompt design automated generation llama qwen compare four tailored prompt different llm worth studying stateoftheart prompt optimization approach experi received adequate attention mental result demonstrate map outperforms baseline achieve llmtailored prompt one potential approach method large margin achieving higher line leverage prompt optimization method natural coverage rate higher branch coverage rate language processing nlp field method average besides experiment different llm reveal typically use llm evolutionary algorithm map effectively generate suitable prompt iteratively search discrete natural language space llm surpassing manually designed prompt effective prompt generateandvalidate approach contribution summary main contribution however applied test case generation method work follows fallshortofachievingpromisingresultsduetothreemainlimi tothebestofourknowledgethispaperpresentsthefirst tationslowdiversityingeneratedpromptsthesemethods study automatically producing llmtailored prompt optimize prompt simply combining mutating existing test case generation one using llm ignoring diversity generated propose novel method map effectively im prompt potentially lead insufficient exploration prof prompt optimization process integrating vast natural language search space consequently diversityguided prompt generation failuredriven rule optimization process may converge prematurely local op induction domain contextual knowledge extraction tima hindering discovery suitable prompt extensive experiment three popular llm demon lackofproperguidanceonavoidingcommonerrorsexisting strate method substantially outperforms baseline method generate new prompt based solely existing one approach effectively generate tailored prompt without considering recurring error result test different llm case produced optimized prompt often exhibit organizationtherestofthispaperisorganizedasfollows issue generated unoptimized prompt therefore section ii describes background an show motivating important effectively guide optimization process example section iii detail three component directed improvement prevent llm making proposed map including domain contextual knowledge recurringerrorsabsenceofdomaincontextualknowledge extraction diversityguided prompt generation failure existing llmbased test case generation approach driven rule induction section iv describes evaluation typically utilize focal method limited infile method including research question datasets baseline context information lack necessary domain contextual andimplementationdetailssectionvpresentstheexperimen knowledge subclass inheritance class invocation tal result section vi discusses case threat informationwhichiscrucialforgeneratingaccuratetestcases validity section viii concludes paper given complex inheritance invocation relationship class function realworld project ii backgroundandmotivatingexample difficult llm infer information background paper propose map first llmtailored prompt generation method test case generation map work concentrate blackbox llmbased effectively automatically generates suitable prompt automatic prompt optimization apo given thejournaloflatexclassfilesvolnoseptember table ii example prompt generated opro optimization process underlined part represents similar pattern among prompt prompt create unit test verify correctness method implementation provided java class create unit test validate functionality specific method within provided java class create unit test ensure method supplied java class behave expected create unit test confirm method behave expected produce correct result widespread adoption powerful capability blackbox focal method llm apo utilizes llm optimize prompt iteratively public class timeseries extends series implement cloneableserializable searchingforthemosteffectiveoneswithinthediscretespace public timeseries createcopyint start int end natural language formally task work throw clonenotsupportedexception blackbox model small development set test set ifstart throw new illegalargumentexception dev requires start andascoringfunctionsapoaimsatdiscoveringan test ifend startthrow new advanced prompt p based dev natural language illegalargumentexceptionrequires start end space maximizes performance test set prompt p expected guide model directly test test case generated seed prompt generate highquality response instead timeconsuming public void testcreatecopyempty multiiteration generation test time typical apo timeseries timeseries new timeseriestest framework operates follows first begin set timeseries copy timeseriescreatecopy seed prompt obtained either manually timeseriesgetitemcount throughautomatictechniquesthentheseedpromptsareused test case generated optimized prompt generate response dev via response public void testcreatecopyempty evaluated using scoring function line timeseries timeseries new timeseriesemptytest coverage rate test case generation prompt perform timeseries copy timeseriescreatecopy well retained discarded timeseriesgetitemcount using retained prompt apo method query generate new prompt example representative method listing one example showing recurring error made opro generates new prompt prompting llm seed prompt optimized prompt error line prompt generate instruction different highlighted red theinstructionsandhasahigherscorethanalltheinstructions newly generated prompt integrated observation recurring common error across retained prompt next iteration optimization erations additionally analyzing generated test case several iteration best prompt used dev different iteration find test case final optimized prompt dev test generated optimized prompt tend exhibit error unoptimized one example shown b motivating example listingboththetestcasesgeneratedbytheseedpromptand first conduct preliminary study applying existing optimized prompt lack exception handling statement apo method realworld test case generation defectsj encounter runtime error existing prompt optimiza find struggle produce wellperforming prompt tion method rely solely current prompt without proper analyzing optimized prompt generated test case guidancemakingitdifficulttoachievedirectedimprovements identify three main problem current apo method address error made current prompt tackle observation low diversity prompt generated challenge propose leverage failed test case optimization process first upon inspection identify shortcoming current prompt specifically prompt generated optimization process find make llm reflect common error generated test case tend exhibit similar phrase lack diversity softly incorporate reflection output prompt table ii present example prompt generated concise rule help llm avoid making recurring error oprowhichcontainsimilarphrasessuchascreateunit focal method test provided java class low diversity public abstract class abstractcategoryitemrenderer constrains optimization process small portion extends abstractrenderer implement discrete natural language search space limiting exploration categoryitemrenderer cloneable publiccloneable serializable potentially effective alternative phrase make public categoryitemlabelgenerator search process susceptible convergence local optimum getitemlabelgenerator yielding suboptimal performance therefore deal test case problem first key idea method improve public void testfindrangeboundsvaliddataset diversity generated prompt enforcing use abstractcategoryitemrenderer renderer different modification method optimization process new abstractcategoryitemrendererjournaloflatexclassfilesvolnoseptember seed domain contextual knowledge extraction diversityguided prompt generation prompt prompt cov rate modification method search space class class c cl la s b c w wr ri te e u un ni ed xe pn oti sfy e e px oc tee np tt ii ao ln ba ul g sc e n arios n pe row pt focal method local context global context write test cover typical atypical selected write unit prompt domain prompt selection modification generation new prompt generation initialization knowledge augmentation failuredriven rule induction current prompt test case reflection feedback error induced write diverse unit test xxx avoid java class xn p tr ro ab nle sm fo w rme ac ta nx xx pe rom mp po tr l pe rom mp po tr l pe rom mp po tr l fop lle oc wif inic ga l rly u l ep sle e follow generation w sae mig ph lt ie nd g r ule evaluation public void setticklabelinsets failure information selection error reflection rule validation update fig overview map workflow algorithm algorithm map listingoneexampleillustratingtheissueoflackingdomain input iteration number seed prompt p domain contex context information error line highlighted red tual knowledge c llm output final prompt observation lack domain contextual knowl r h initialize set rule r edge finally thoroughly analyzed focal meth handled failure h previous iteration od prompt llm failed generate correct test case primary issue identified evaluate formatprc sampled develop lack domain contextual knowledge illustrated ment set listing given focal method abstract pnrnh promptimprovementprhm class abstractcategoryitemrenderer gener c ated test case directly initialize abstract class rrnr h h nh lead error abstractcategoryitemrenderer p selecttopp select best prompt p abstract cannot instantiated without knowledge return formatprc formalize final prompt subclass llm cannot generate test case correctly initialize class invoke method therefore another keyideaofmapsistoextracttherelevantdomaincontextual finally bestoptimized instruction diversityguided information provide llm capturing contex prompt generation induced rule extracted context infor tual knowledge mationareintegratedtoconstructthefinalpromptfortestcase generation fig illustrates format final prompt iii proposedapproach following section introduce three module detail overview provide overview mapss workflow fig b domain contextual knowledge extraction map start set seed prompt augments focal method infile crossfile context domain contextual knowledge extraction module aim information domain contextual knowledge provide llm related projectlevel context infor extraction module iteration map first evaluates mation enabling generate accurate test case performance current prompt small de illustrated fig contextual knowledge divided velopment set diversityguided prompt generation two category infile contextual knowledge cross module selects topperforming prompt infers file contextual knowledge diversemodificationmethodswhichareusedtohelpgenerate infile contextual knowledge contains class sig createsvariedpromptsinthe failuredrivenruleinduction nature focal method signature member module map aggregate selects representative failure method class signature includes type name information failed test case induces concise rule class containing focal method could avoid failure using reflectionvalidation method helpllmsavoiddirectinitializationofabstractorprivate shown algorithm iterative optimization process class focal method specific method gen continues reaching maximum iteration number erate test case following previous research wejournaloflatexclassfilesvolnoseptember optimized write diverse unit test java class covering wide range scenario including normal case instruction edge case failure case boundary case ensure high test coverage specifically please follow following rule generating test case induced ensure necessary class imported beginning test file prevent error rule ensure class constructor match required parameter type consider public abstract class axis implement cloneable serializable class signature public void setticklabelinsetsrectangleinsets inset focal method ifinsetsnull throw new illegalargumentexceptionnull inset argument focal thisticklabelinsetsequalsinsets method thisticklabelinsets inset notifylistenersnew axischangeeventthis infile context focal method rectangleinsets getticklabelinsets member method domain void setticklabelinsetsrectangleinsets inset contextual knowledge avaible subclass inheritance public class categoryaxis extends axis implement cloneable serializable class definition input parameter invocation public class rectangleinsets implement serializable crossfile public rectangleinsetsdouble top double left double bottom double right thisunittypeabsolute top left bottom right context public rectangleinsetsunittype unittype double top double left double bottom double right fig illustration format final prompt extracted context information also incorporate function signature member constant prompt number following previous work methodswithintheclassasthefocalmethodmayinvoke modification method serve diverse exploration direction themandthesesignaturescanguidethecorrectusageof within discrete natural language search space map function leverage llm generate new prompt based crossfile contextual knowledge refers con modification method sequentially line finally text information file within project selected prompt newly generated prompt propose extract two type crossfile information combined serve new prompt next iteration critical test case generation ignored optimization previous work namely class inheritance information class invocation information focal method failuredriven rule induction abstract private class scan entire project locate subclass extract class signature thefailuredrivenruleinductionmoduleaimsatidentifying subclass information enables llm properly promising optimization direction avoiding llm make instantiatetheclasswithinthetestcasefurthermorefor recurringerrorsitleveragescommonfailuresingeneratedtest class invocation information identify type case identify part existing prompt need argument focal method trace definition improvement induces rule optimize prompt using userdefined type extract signature reflectionvalidation method shown fig constructor invocation information aid llm process contains three phase failure information selection using correct input argument focal method error reflection rule validation detail illustrated algorithm failureinformationselection toidentifyshortcomings c diversityguided prompt generation current prompt propose delve failed test diversityguided prompt generation module aim case generated current prompt select common producing diverse prompt foster comprehensive error specifically map first collect failed test case exploration prompt space enforcing use generated selected prompt sp associated different modification method illustrated fig correspondingfocalmethodanderrormessagesthenmaps algorithm evaluating performance current aggregate failure information f based typical prompt evaluation set map selects topk dbscan clustering algorithm line determine prompt highest average line coverage branch failure address iteration employ coverage using selected sample map first leverage weighted sampling method weight cluster llm generate n distinct modification method based two factor size similarity failure current prompt based modification prompt template information handled failure h previous iteration shown fig line n sizepk larger cluster size indicates higher probability failure sizep indicates number seed prompt maintain type assign larger weight similarityjournaloflatexclassfilesvolnoseptember algorithm promptimprovement input promptspexistingruleserhandledfailureshllmmdomaincontextualknowledgecnewpromptsnumber n output optimized prompt op new induced rule nr new handled failure nh op nr diversityguided prompt generation sp selecttoppsizepn select top k prompt p generate n different modification method using p generate new prompt using based sp opinsertp op op sp failuredriven rule induction f clusterfailureinfosp clustering dbscan f samplerepresentativeclusterhf sample eq e reflectionf prompt get explanation solution r summarizees prompt transform rule r r formatselecttopperrc formatselecttopperc nrinsertr nr selecttopnr nh f select best rule nr nr empty return op nr nh h prevent model getting stuck rule validation maintain quality induced difficulttosolve issue map measure similarity rulesthispartaimsatretainingonlythemosteffectiveonesby betweenthefailuresineachclusterandthoseinhandassigns validatingeachnewlygeneratedruleandincorporatingthebest lower weight cluster higher similarity specifically one prompt end shown line weight calculated follows algorithm map first construct temporary prompt newly generated rule optimized instruction part edf h sim max temporary prompt bestperforming one p hh maxlenf ilenh induced rule part temporary prompt includes sizef sim existing rule er newly generated rule weight cidn sizef sim r map evaluates performance temporary j j j prompt sampled development set incorporates ed denotes edit distance size denotes rule corresponding temporary prompt achieves corresponding cluster size f denote failure infor highest performance final prompt line mation ith cluster center sample handled failure h previous iteration respectively error reflection selected failure information iv experimentalsetup f part aim enhance prompt incorporating ef research question fective mitigation strategy prevent llm repeating evaluation focus following four research error first map chooses test case whose question failure information exhibit lowest euclidean distance cluster center f construct reflection prompt rq effective map compared existing depicted fig b reflection prompt used prompt optimization method instruct llm provide detailed explanation rq map able generate tailored prompt dif solution failure information line additionally ferent llm ensure solution applied example rq impact module perfor andnotjustthegivenonesthereflectionpromptalsorequires mance map model remove examplespecific information make rq mapss performance vary different thesolutionsapplicabletoothersimilarcasestoavoidpoten experimental setting tialperformancedegradationbroughtbylengthyprompts study rq conduct comprehensive evaluation propose soft incorporation reflection output map comparing four representative prompt converting concise rule specifically map task optimization method three popular llm rq llm transforming explanation solution assess mapss ability generate llmtailored prompt structured rule r based transformation prompt different llm evaluating performance optimized template shown fig c line prompt produced map manually designed promptsjournaloflatexclassfilesvolnoseptember modification prompt template b reflection prompt template c transformation prompt template system prompt system prompt system prompt tutor help write software engineer help tutor help write rule suggestion please wrap suggestion analyze program give suggestion directly give content rule start end user prompt user prompt user prompt example buggy unit test along example common mistake prompt java unit test generation error message please identify cause student make writing unit test please write n different modification suggestion error provide strategy avoid solution based example please select prompt make modified prompt error future ensure one effective rule rewrite one better help student understand task write recommendation broadly applicable similar precise sentence format ensure diverse unit test high coverage rate type error help student avoid mistake selected prompt test case error information future unit test explanation solution fig prompt template map complete one found replication package table iii statistic defectsj benchmark c baseline project abbr bugnumber focalclass focalmethod provide comprehensive evaluation experiment three popular llm compare map four represen commonscli cli commonscsv csv tative prompt optimization method detail gson gson forllmsweselectthefollowingpowerfulllmsincode jfreechart chart related task evaluation commonslang lang chatgptisapopularmodelknownforitsversatile capabilitiesacrossvariousfieldssuchascodegeneration closedsource model developed openai different llm rq remove different module use latest version gptturbo ex mapstoevaluatetheirindividualcontributionsforrqwe periments investigate mapss performance different experimental llamaisafamilyofstateoftheartopensource settingsincludingthenumberofseedpromptsthenumberof llm different size including b b generatedpromptsperiterationnandthemaximumiteration b paper use instructiontuned llama number binstruct experiment qwen opensource large language model b datasets metric achievespromisinginavarietyofcodeintelligencetasks evaluate map widelyused defectsj ithasakcontextlengthtodealwithprojectlevellong dataset following previous study use five codespecificallywechooseqwenbinstructinthis commonly used java project dataset including paper apachecommonscliapachecommonscsvgooglegson prompt optimization method compare map jfreechartandapachecommonslangforeachprojectwe basic prompt four stateoftheart prompt opti usethefixedversionsusedbyexistingworkforevaluation mization method project span diverse domain including command basicdenotestheperformanceofthebestseedpromptit line interface data processing serialization visualization isusedtomeasurehowmuchimprovementscouldprompt utility library respectively table iii present overall optimization method achieve information dataset detailed information apeisatypicalpromptoptimizationmethodthatdi specific version commit hash found rectlyasksllmstogeneratevariantsforcurrentprompts replication package evaluation metric keep semantic meaning iteration follow previous work adopt two popular opro incorporates performance infor metricstoevaluatetheperformanceofmapsandthebaseline mation let llm generate new prompt approach enhance test accuracy based existing prompt line coverage measure percentage code performance linesexecutedduringtestingitcheckswhethereachline evoprompt stateoftheart prompt opti source code executed least ie line mization method generates new prompt based coverage nu tm otb ae lr uf bx ee rcu ot fe ld inl ein s line evolutionaryoperatorsithastwoversions evoprompt covered passed test case used calculation ga evoprompt de use genetic branch coverage measure percentage algorithm differential evolution respectively branch executed testing check whether branch control structure executed ie branch coverage numberofexecutedbranches implementation totalnumberofbranches branch covered passed test case used inourexperimentsthenumberofseedpromptsthenumber calculation generated prompt per iteration n maximumjournaloflatexclassfilesvolnoseptember table iv comparison prompt optimization method chatgpt number denotes standard deviation project chart cli csv gson lang average linecoverage basic ape opro evopromptga evopromptde map branchcoverage basic ape opro evopromptga evopromptde map iteration number set respectively simply combining mutating existing prompt difficult impact different experimental setting discussed produce effective prompt test case generation section vd repeat map three time report average result variance eliminate influence map achieves substantial improvement baseline sampling fluctuation llm prompt method seen table ivvi map consid optimization stage randomly sample ten bug erably outperforms baseline method across llm defectsjbenchmarkasourdevelopmentsetd dev anduseall example compared strongest baseline method bug test set test present sampled development evoprompt ga map achieves average improvement set dev replication package save manual line coverage branch coverage effortsweobtaintheseedpromptsautomaticallybychatgpt respectively result demonstrate effectiveness existing automatic prompt engineer method map finding effective prompt within vast search ensure fair comparison use development space set seed prompt tool baseline method seed prompt prompt template used work theperformanceofdifferentllmsondifferentprojects found replication package conduct varies comparing performance different project experiment ubuntu server core intel acrossdifferentllmswefurtherobservethatdifferentllms xeon platinum cpu tend perform well different project instance shown table ivvi although overall performance v experimentalresults chatgpt llama basic prompt similar performance individual project exhibit large differ rq performance evaluation encesspecificallyonthelangprojectchatgptoutperforms evaluate effectiveness map test case gen llama qwen term eration compare four representative prompt op line coverage respectively csv project timization method across three popular llm table iv performance chatgpt much worse llama vi present performance map along baseline qwen decrease term method defectsj method provide line coverage respectively indicates different llm average performance across bug well detailed tend excel different domain also demonstrates average result project based result importance building tailored prompt different llm derive following finding existing prompt optimization method struggle pro map could achieve higher improvement duce effective prompt test case generation com project seed prompt perform well paring performance basic prompt four baseline last shown table ivvi find improvement methodswecanobservethatexistingmethodsstruggletopro achieved map different project also vary across duceeffectivepromptsfortestcasegenerationspecificallyas different llm instance lang project relative shownintableivthebestperformingbaselineevoprompt improvementonchatgptandqwenareand ga achieve improvement respectively whereas csv project improvement thebasicpromptinlinecoverageandbranchcoveragerespec chatgpt qwen respectively tively moreover method like ape opro even perform result demonstrate map achieve higher worse basic prompt term line coverage increase project llm excel decreasesofandrespectivelythissuggeststhat provide directed improvement tailored different llmsjournaloflatexclassfilesvolnoseptember table v comparison prompt optimization method llama number denotes standard deviation project chart cli csv gson lang average linecoverage basic ape opro evopromptga evopromptde map branchcoverage basic ape opro evopromptga evopromptde map table vi comparison prompt optimization method qwen number denotes standard deviation project chart cli csv gson lang average linecoverage basic ape opro evopromptga evopromptde map branchcoverage basic ape opro evopromptga evopromptde map table vii evaluation map generating tailored prompt different llm approach chatgpt llama qwen chatgpt llama qwen linecoverage branchcoverage chatgptsfinalprompt llamasfinalprompt qwensfinalprompt manuallydesignedprompt answer rq map effectively enhances prompt package based result following test case generation consistently outperforms baseline observation method across various llm achieving higher performance different prompt varies lot line coverage rate higher branch coverage rate comparing performance final prompt different compared strongest baseline modelswecanfindthattheperformanceofdifferentprompts llm varies lot specifically line coverage b rq llmtailored prompt generation evaluation rate branch coverage rate llama different final prompt range inthisrqwestudywhethermapscouldgeneratetailored respectively demonstrates importance prompt different llm achieve evaluate automated generating tailored prompt different llm performance three final prompt obtained three model model additionally also compare map effectively produce tailored prompt dif prompt used validate whether prompt built ferent llm table vii observe map could outperform manuallydesigned prompt model tends achieve best performance experimental result depicted table vii finalpromptforexampletheperformanceofchatgptsfinal detailedresultsoneachprojectcanbefoundinourreplication prompt outperforms final prompt obtained llamajournaloflatexclassfilesvolnoseptember table viii ablation study map approach linecoverage branchcoverage map wodomaincontextualknowledgeextraction chatgpt wodiversityguidedpromptgeneration wofailuredrivenruleinduction onlydomaincontextualknowledgeextraction map wodomaincontextualknowledgeextraction llama wodiversityguidedpromptgeneration wofailuredrivenruleinduction onlydomaincontextualknowledgeextraction map wodomaincontextualknowledgeextraction qwen wodiversityguidedpromptgeneration wofailuredrivenruleinduction onlydomaincontextualknowledgeextraction qwen term line coverage demonstrates importance prompt diversity chatgptthisindicatesthatmapscouldeffectivelyproduce search space exploration process tailored prompt llm failuredrivenruleinductionweconductthisexperiment prompt optimized map outperform manually removing induced rule final prompt designed prompt additionally prompt obtained table viii observe without failuredriven rule map also outperforms line coverage manually induction performance map drop lot across designed prompt chatgpt llm specifically chatgpt line coverage decrease llama qwen respectively result demon branch coverage respectively strate mapss efficacy automatically crafting effective indicatesthebenefitsofusingllminducedrulestoguidethe llmtailored prompt optimizationprocessandavoidllmsmakingrecurringerrors show case section via illustration answer rq performance different prompt domain contextual knowledge extraction varies lot map could effectively produce tailored domain contextual knowledge extraction module provides prompt different llm significant performance gain evaluate much could module bring basic prompt ensurefairnessincomparisonweconductthisexperimentby removingboththediversityguidedpromptgenerationmodule c rq ablation study failuredriven rule induction module shown conduct ablation study validate effectiveness table viii removing two part lead substantial eachmoduleinourmethodiedomaincontextualknowledge performance map specifically solely involving extraction diversityguided prompt generation failure main contextual knowledge extraction bring limited drivenruleinductiontheaverageresultsforeachmethodare improvement basic prompt ie improving line presented table viii detailed result project coverage branch coverage qwen available replication package respectively performance still fall behind map domain contextual knowledge extraction conduct large margin indicates simply combining thisexperimentbyremovingthecrossfilecontextinformation basic prompt context information without final prompt seen table viii excluding optimization achieve satisfactory performance crossfile context information dramatically degrades per answer rq module map contribute formance across llm specifically branch coverage performance removing domain contextual knowledge rate drop chatgpt llama extraction part lead largest performance decrease qwen respectively result demonstrate effectivenessofintegratingprojectcontextinformationtohelp llm generate accurate test case rq parameter analysis diversityguidedpromptgenerationtovalidatetheeffec tivenessofdiversityguidedpromptgenerationweexperiment section study different experimental set byreplacingtheoptimizedinstructionpartofthefinalprompt ting affect performance map baseline method withtheoneproducedbythebestbaselinemethodasshown including number seed prompt number gener table viii removing diversityguided prompt genus ated prompt n maximum iteration number tion lead consistent drop task metric parameter primarily influence prompt optimization example line coverage rate decrease processwereporttheirperformanceonthedevelopmentsetin chatgpt llama qwen respectively section study vary parameter underjournaloflatexclassfilesvolnoseptember evopromptga map egarevoc enil evopromptga map nnuummbebreor fosfe sedeepdro pmrpotmspt egarevoc enil b numnbuemrboferg eonfe sraeteedd pprroommpptst fig parameter analysis number seed prompt generated prompt chatgpt ape opro evopromptga evopromptde map iteration egarevoc enil ape opro evopromptga evopromptde map iteration chatgpt egarevoc enil ape opro evopromptga evopromptde map iteration b llama egarevoc enil c qwen fig parameter analysis iteration number analysis keep others constant analysis number performance basic prompt without optimization seed prompt generated prompt present map shown fig map achieves best result chatgpt complete result available performance case specifically map outperforms replicate package baseline method least line coverage number seed prompt conduct experiment maximum iteration number set three additionally due evaluate map baseline method perform dif low prompt diversity baseline method tend converge ferent numbersof seedprompts specificallywe use thebest local optimum first iteration fail achieve performingbaselineevopromptgaandsetthenumberof furtherimprovementincontrastmapscontinuallyenhances seed prompt respectively fig performance iteration wecanobservethatmapsconsistentlyachievesbetterperfor answer rq map consistently achieves best manceacrossdifferentnumbersofseedpromptsadditionally performance across different parameter setting hyper bycomparingtheperformanceunderdifferentnumbersofseed parameter setting number seed prompt set promptswecanfindthatmapsand evoprompt gatend n achieve effective result achieve better performance larger number seed prompt improvement five seed prompt vi discussion marginal therefore set number seed prompt case study five paper number generated prompt also study effect better understand map improves test case gen number generated prompt varying eration present two example final prompt cre shown fig b map consistently achieves better ated map resulting test case performance across different number generated prompt final prompt first fig show final prompt whilealargernumberofgeneratedpromptscanleadtobetter llama along generated test case based performance also increase cost therefore set focal method listing find number generated prompt two experiment following second induced rule llama correctly maximum iteration number study vary generates test case us try catch number maximum iteration number inves illegalargumentexception e test method tigatetheperformanceofpromptsineachiterationwepresent second fig b illustrates another example using chat result best prompt generated map gpt focal method taken listing com baselinemethodonthedevelopmentsetiterationrepresents pared incorrect test case generated baselinejournaloflatexclassfilesvolnoseptember final prompt llama final prompt chatgpt write comprehensive set unit test given write diverse unit test java class covering wide range java class covering happy path edge scenario including normal case edge case failure case case ensure method behave correctly boundary case ensure high test coverage validation various input scenario aiming minimum method correctness code coverage specifically please follow following rule writing test case specifically please follow following rule ensure necessary class imported beginning writing test case test file prevent error ensure necessary class method ensure class constructor match required field properly imported correctly spelled parameter type consider using factory method builder capitalized pattern flexibility object creation ensure calling method throw focal method checked exception either wrap call try public abstract class abstractcategoryitemrenderer catch block handle exception declare public range findrangeboundscategorydataset dataset exception thrown test method using throw keyword avaible subclass focal method public class arearenderer extends abstractcategoryitemrenderer implement cloneable publiccloneable serializable test case generated final prompt public void test case generated final prompt testcreatecopyemptyitemtimeseries throw clonenotsupportedexception public void testarearendererfindrangeboundsemptydataset timeseries series new timeseries int start arearenderer arearenderer new arearenderer int end timeseriesgetitemcount categorydataset dataset new defaultcategorydataset range range arearendererfindrangeboundsdataset try seriescreatecopystart end assertnullrange catch illegalargumentexception e case study llama b case study chatgpt fig two case showing difference optimized prompt different model optimized prompt help generate correct test case table ix comparison randoop atest chattester prompt listing crossfile contextual knowledge map optimized prompt allows model correctly ini tialize abstractcategoryitemrenderer class project linecoverage branchcoverage additionally comparing two final prompt obtained randoop map observe induced rule llama atest chatgpt different first rule two method chatgptbasic similar llama second rule focus exception chatgptmaps handling whereas chatgpts concern method parameter indicates model tend make different type error map effectively introduce tailored rule unitintonoteworthystatesatestisastateoftheartnon different llm llmbaseddeeplearningmodelthatfinetunesplbart moreover calculating average edit distance test case generation randoop reproduce based prompt obtained optimization iteration map gentestspl script provided defectsj find generates diverse prompt atest reproduce result based atests replicate optimization process specifically average edit distance package prompt map remarkably larger table ix present experimental result term line ofoprowhichaveragesonlyeditsasshownintableii coverage branch coverage compared three baseline demonstrates mapss effectiveness generating method chatgptmaps achieves highest line coverage diverse prompt optimization process ieandbranchcoverageieoutperform ing traditional method least b comparison method spectivelythisdemonstratesmapsseffectivenessinhelping comprehensively study advantage limitation llm generate test case high coverage besides llmsbased test case generation method compared comparing performance randoop chatgptbasic traditional approach previous deep learningbased ap chatgptmaps find performance chat proaches compare chatgptmaps two baseline gptbasicislowerthantraditionalmethodrandoopmeaning method including randoop atest randoop simply prompting llm achieve satisfactory widely used automated software testing tool employ result map produce suitable prompt llm randomfuzzingonunitapistoconstructprefixesthatleadthe make llm outperform traditional methodsjournaloflatexclassfilesvolnoseptember although also llmbased method model convert target method corresponding test chatunitest compare case assertion series recent study research orthogonal map focus optimizing employed deep learning technique test case generation tailored prompt test case generation formulating test case generation neural machine combined existing method incorporating static translation task train model convert target method information multiturn refinement method corresponding test case assertion example achieve better performance athenatest finetunes bart dataset designed test generation atest incorporates assertion knowledge test signature verification mechanism c threat validity achieving better result recently leveraging advancement identify two main threat validity study llm test case generation approach based llm limited llm given rapid development large alsobeenproposedandshownpromisingresultsforexample language model model covered paper codamosa leverage llm provide example test mitigate issue select three representative case undercovered function searchbased testing popular llm contain opensource model hitsacoveragestallchattesterincorporateschatgpt closedsource model additionally map model along iterative test refiner generate test different agnosticanddoesnotrequireaccesstothemodelsparameters work method serf first llm therefore believe map also achieve improvement tailoredpromptgenerationmethodfortestcasegenerationand llm combined existing method enhance limited programming language paper con performance besides method aim directly duct experiment using defectsj benchmark avoid generating lowquality test case optimized contains java project benchmark popular widely prompt instead timeconsuming multiiteration generation used previous work furthermore method language fixing test time agnostic easily adapted programming language future plan conduct experiment c llm software engineering datasets including language python largelanguagemodelshaverecentlybeenwidelyadopted vii relatedwork various software engineering task due impressive performance code generation understanding automatic prompt optimization example yuan et al evaluate performance automatically discovering optimal prompt emerged ofchatgptfortestcasegenerationandimproveitbyiterative animportantchallengeintheeraofllmsmostex testrefinergaoetalinvestigatehowtosettheincontext istingmethodsfollowaniterativepromptoptimizationprocess demonstration chatgpt code summarization code theystartwithasetofseedpromptsanditerativelysynthesize generation task chatrepair iteratively evaluates pro new prompt candidate evaluating performance select gram test case feed error message llm thetoponesforthenextiterationforexampleapeisa patch generation selfedit utilizes compiler typical prompt optimization method directly asks llm error message enhance correctness code generation generate variant current prompt maintaining li et al investigates feasibility slicing commer semantic meaning iteration opro cial blackbox llm using mediumsized backbone model incorporates performance information let llm sbllm combine searchbased method llm generatenewpromptsthatcanenhancethetestaccuracybased iterativelyimprovecodeefficiencydeepseekcoderisan onexistingpromptsandtheirperformance evoprompt opensource mixtureofexperts moe code language model stateoftheart prompt optimization method gen achieves stateoftheart performance across various code erates new prompt based evolutionary operator intelligence task starcoder advanced llm two version evoprompt ga evoprompt de trained programming language trained use genetic algorithm differential evolution stackdatasetandnaturallanguagetextfromwikipedia respectivelydifferentfromthoseworksthispaperfocuseson arxiv github issue magicoder recent model llmtailoredpromptoptimizationfortestcasegenerationand trained synthetic instruction data enhanced open investigates improving exploration search process source code snippet proposes ossinstruct produce diverse realistic instruction tuning data b test case generation opensourcecodesnippetstoaddressthebiasestypicallyfound synthetic data generated llm traditional method like randoop utilize random fuzzing unit apis construct prefix lead unit noteworthy state evosuite searchbased viii conclusion test generation strategy employ evolutionary algorithm inthispaperweintroducedanovelautomaticllmtailored autonomously craft test suite java class aimed prompt generation method map test case generation improving coverage rate series recent study optimization process map generates diverse employed deep learning technique training candidate prompt facilitate exploration promptjournaloflatexclassfilesvolnoseptember search space induces rule failure case avoid dubey jauhri pandey kadian aldahle letman recurring error additionally map integrates various mathur schelten yang fan goyal hartshorn ayangamitraasravankumarakorenevahinsvarkarao maincontextualknowledgeforgeneratingcorrecttestcasesin azhangarodriguezagregersonaspatarubrozierebbiron practical project extensive experiment defectsj show b tang b chern c caucheteux c nayak c bi c marra map outperforms existing prompt optimization meth c mcconnell c keller c touret c wu c wong c c ferrer cnikolaidisdallonsiusdsongdpintzdlivshitsdesiobu od replicate package work publicly available choudhary mahajan garciaolano perino hupkes httpszenodoorgrecords e lakomkin e albadawy e lobanova e dinan e smith fradenovicfzhanggsynnaevegleeglandersongnail g mialon g pang g cucurell h nguyen h korevaar h xu reference htouvronizaroviaibarraimkloumannimisraievtimov jcopetjleejgeffertjvranesjparkjmahadeokarjshah dmrafikrkmoseskpetersenandmmantylabenefitsand j van der linde j billock j hong j lee j fu j chi j huang limitation automated software testing systematic literature review jliujwangjyujbittonjspisakjparkjroccajjohnstun practitioner survey th international workshop automation jsaxejjiakvalwalakupasanikplawiakklikheafield ofsoftwaretestastzurichswitzerlandjune ieee andkstonethellamaherdofmodelscorrvolabs computersocietypp almasi h hemmati g fraser arcuri j benefelds qguorwangjguobliksongxtangliujbianand anindustrialevaluationofunittestgenerationfindingrealfaultsina yang connecting large language model evolutionary algo financial application th ieeeacm international conference rithmsyieldspowerfulpromptoptimizersinthetwelfthinternational software engineering software engineering practice track icse conference learning representation iclr vienna austria seipbuenosairesargentinamay ieeecomputer may openreviewnet societypp zhou muresanu z han k paster pitis h chan p runeson survey unit testing practice ieee softw vol j ba large language model humanlevel prompt engineer nopp eleventh international conference learning representation c pacheco ernst randoop feedbackdirected random iclrkigalirwandamay openreviewnet testing java companion nd annual acm sigplan j h holland adaptation natural artificial system intro conferenceonobjectorientedprogrammingsystemslanguagesand ductory analysis application biology control artificial applicationsoopslaoctobermontrealquebec intelligence mitpress canada acmpp r storn k price differential evolutiona simple efficient mtufanoddrainasvyatkovskiyskdengandnsundaresan heuristic global optimization continuous space journal unit test case generation transformer focal context arxiv globaloptimizationvolpp preprintarxiv g ryan jain shang wang x k ramanathan jwangyhuangcchenzliuswangandqwangsoftware b ray codeaware prompting study coverageguided test testingwithlargelanguagemodelssurveylandscapeandvisionieee generation regression setting using llm proc acm softw eng transsoftwareengvolnopp volnofsepp g fraser arcuri evosuite automatic test suite generation ayangbyangbhuibzhengbyuczhoucliclidliu forobjectorientedsoftwareinsigsoftfsethacmsigsoft f huang g dong h wei h lin j tang j wang j yang j tu symposium foundation software engineering fse jzhangjmajyangjxujzhoujbaijhejlinkdang esectheuropeansoftwareengineeringconferenceesec k lu k chen k yang li xue n ni p zhang p wang szegedhungaryseptember acmpp r peng r men r gao r lin wang bai tan zhu mlewisyliungoyalmghazvininejadamohamedolevy li liu w ge x deng x zhou x ren x zhang x wei v stoyanov l zettlemoyer bart denoising sequenceto x ren x liu fan yao zhang wan chu liu sequence pretraining natural language generation translation zcuizzhangzguoandzfanqwentechnicalreportcorr comprehension proceeding th annual meeting volabs associationforcomputationallinguisticsaclonlinejuly r x wang x zhou j li n du gui q zhang associationforcomputationallinguisticspp xhuangarelargelanguagemodelsgoodpromptoptimizerscorr alagarsamy c tantithamthavorn aleti atest assertion volabs augmentedautomatedtestcasegenerationcorrvolabs c yang x wang lu h liu q v le zhou x chen large language model optimizers twelfth international chatgptchatgpthttpschatopenaicom conference learning representation iclr vienna austria kojima gu reid matsuo iwasawa large may openreviewnet language model zeroshot reasoner advance neural information processing system annual conference neural ester h kriegel j sander x xu densitybased algo informationprocessingsystemsneuripsneworleansla rithm discovering cluster large spatial database noise usanovemberdecember proceeding second international conference knowledge z xiey chenc zhis dengand jyin chatunitesta chatgpt discoveryanddataminingkddportlandoregonusa aaai basedautomatedunittestgenerationtoolcorrvolabs presspp nfliuklinjhewittaparanjapembevilacquafpetroniand z yuan liu ding k wang chen x peng lou plianglostinthemiddlehowlanguagemodelsuselongcontexts evaluatingandimprovingchatgptforunittestgenerationprocacm transassoccomputlinguisticsvolpp softwengvolnofsepp g kamradt needle haystack pressure testing llm http gao x wen c gao w wang h zhang r lyu githubcomgkamradtllmtest needleinahaystack whatmakesgoodincontextdemonstrationsforcodeintelligencetasks map replication package httpszenodoorgrecords withllmsinthieeeacminternationalconferenceonautomated softwareengineeringaseluxembourgseptember ivankovic g petrovic r g fraser code coverage ieeepp googleinproceedingsoftheacmjointmeetingoneuropeansoftware h gonen iyer blevins n smith l zettlemoyer engineeringconferenceandsymposiumonthefoundationsofsoftware demystifying prompt language model via perplexity estimation engineeringesecsigsoftfsetallinnestoniaaugust finding association computational linguistics emnlp acmpp singaporedecember associationforcomputational w u ahmad chakraborty b ray k chang unified pre linguisticspp training program understanding generation proceeding r jalali ernst defectsj database existing theconferenceofthenorthamericanchapteroftheassociation fault enable controlled testing study java program inter forcomputationallinguisticshumanlanguagetechnologiesnaacl nationalsymposiumonsoftwaretestingandanalysisisstasan hlt online june association computational josecausajuly acmpp linguisticsppjournaloflatexclassfilesvolnoseptember atestatestreplicationpackagehttpsgithubcomawsmresearch atest showcase rpryzantditerjliytleeczhuandmzengautomatic prompt optimization gradient descent beam search proceedingsoftheconferenceonempiricalmethodsinnatural languageprocessingemnlpsingaporedecember associationforcomputationallinguisticspp h yu lou k sun ran xie hao li g li qwangautomatedassertiongenerationviainformationretrievaland itsintegrationwithdeeplearninginthieeeacmthinternational conferenceonsoftwareengineeringicsepittsburghpausa may acmpp wsunhlimyanyleiandhzhangrevisitingandimproving retrievalaugmented deep assertion generation th ieeeacm ternationalconferenceonautomatedsoftwareengineeringase luxembourgseptember ieeepp gao w mao c gao l li x hu x xia r lyu learninginthewildtowardsleveragingunlabeleddataforeffectively tuningpretrainedcodemodelsinproceedingsofthethieeeacm internationalconferenceonsoftwareengineeringicselisbon portugalapril acmpp clemieuxjpinalasklahiriandssencodamosaescaping coverage plateau test generation pretrained large language modelsinthieeeacminternationalconferenceonsoftwareen gineeringicsemelbourneaustraliamay ieee pp gao h zhang c gao c wang keeping pace ever increasingdatatowardscontinuallearningofcodeintelligencemodels inthieeeacminternationalconferenceonsoftwareengineering icsemelbourneaustraliamay ieeepp z yang f liu z yu j w keung j li liu hong x zjinandgliexploringandunleashingthepoweroflargelanguage modelsinautomatedcodetranslationprocacmsoftwengvol nofsepp gao c gao j zeng l nie x xia r lyu code structureguided transformer source code summarization acmtranssoftwengmethodolvolnopp zlicwangswangandcgaoprotectingintellectualproperty oflargelanguagemodelbasedcodegenerationapisviawatermarksin proceeding acm sigsac conference computer communicationssecurityccscopenhagendenmarknovember acmpp csxiaandlzhangkeeptheconversationgoingfixingout ofbugsforeachusingchatgptcorrvolabs k zhang z li j li g li z jin selfedit faultaware code editorforcodegenerationinproceedingsofthestannualmeeting association computational linguistics volume long paper acl toronto canada july association forcomputationallinguisticspp z li c wang p c liu wang wu c gao liu onextractingspecializedcodeabilitiesfromlargelanguagemodelsa feasibility study proceeding th ieeeacm international conference software engineering icse lisbon portugal april acmpp gao c gao w gu lyu searchbased llm code optimization ieeeacm th international conference softwareengineeringicse ieeecomputersocietypp dguoqzhudyangzxiekdongwzhanggchenxbi wu k li f luo xiong w liang deepseekcoder whenthelargelanguagemodelmeetsprogrammingtheriseofcode intelligencecorrvolabs lozhkov r li l b allal f cassano j lamypoirier n tazi tang pykhtar j liu wei liu tian kocetkov azuckerybelkadazwangqliudabulkhanovipaulzli wlimrisdaljlijzhutyzhuoezheltonozhskiinoo dadewyulkraunjainysuxhemdeyeabatiychai nmuennighoffxtangmoblokulovcakikimmaronecmou mishra gu b hui dao zebaze dehaene n patry cxujjmcauleyhhutscholakspaquetjrobinsoncj andersonnchapadosandetalstarcoderandthestackvthe nextgenerationcorrvolabs wei z wang j liu ding l zhang magicoder source codeisallyouneedcorrvolabs"]}